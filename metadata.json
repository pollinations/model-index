{
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/preset-envisioning": {
        "hash": "sha256:9c8595a810b318ea9c6f6682da30e49307036fbc26db8fc34ea06e001c44eb37",
        "full_url": "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/preset-envisioning@sha256:9c8595a810b318ea9c6f6682da30e49307036fbc26db8fc34ea06e001c44eb37",
        "openapi": {
            "components": {
                "schemas": {
                    "HTTPValidationError": {
                        "properties": {
                            "detail": {
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail",
                                "type": "array"
                            }
                        },
                        "title": "HTTPValidationError",
                        "type": "object"
                    },
                    "Input": {
                        "properties": {
                            "Diversity_scale": {
                                "default": 10,
                                "description": "As a rule of thumb, higher values of scale produce better samples at the cost of a reduced output diversity.",
                                "title": "Diversity Scale",
                                "type": "number",
                                "x-order": 4
                            },
                            "ETA": {
                                "default": 1,
                                "description": "Can be 0 or 1",
                                "title": "Eta",
                                "type": "integer",
                                "x-order": 2
                            },
                            "Height": {
                                "default": 256,
                                "description": "Height",
                                "title": "Height",
                                "type": "integer",
                                "x-order": 6
                            },
                            "Prompt": {
                                "default": "",
                                "description": "Your text prompt.",
                                "title": "Prompt",
                                "type": "string",
                                "x-order": 0
                            },
                            "Samples_in_parallel": {
                                "default": 4,
                                "description": "Batch size",
                                "title": "Samples In Parallel",
                                "type": "integer",
                                "x-order": 3
                            },
                            "Steps": {
                                "default": 100,
                                "description": "Number of steps to run the model",
                                "title": "Steps",
                                "type": "integer",
                                "x-order": 1
                            },
                            "Width": {
                                "default": 256,
                                "description": "Width",
                                "title": "Width",
                                "type": "integer",
                                "x-order": 5
                            }
                        },
                        "title": "Input",
                        "type": "object"
                    },
                    "Output": {
                        "title": "Output",
                        "type": "null"
                    },
                    "Request": {
                        "description": "The request body for a prediction",
                        "properties": {
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output_file_prefix": {
                                "title": "Output File Prefix",
                                "type": "string"
                            }
                        },
                        "title": "Request",
                        "type": "object"
                    },
                    "Response": {
                        "description": "The response body for a prediction",
                        "properties": {
                            "error": {
                                "title": "Error",
                                "type": "string"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            }
                        },
                        "required": [
                            "status"
                        ],
                        "title": "Response",
                        "type": "object"
                    },
                    "Status": {
                        "description": "An enumeration.",
                        "enum": [
                            "processing",
                            "succeeded",
                            "failed"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "ValidationError": {
                        "properties": {
                            "loc": {
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location",
                                "type": "array"
                            },
                            "msg": {
                                "title": "Message",
                                "type": "string"
                            },
                            "type": {
                                "title": "Error Type",
                                "type": "string"
                            }
                        },
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "title": "ValidationError",
                        "type": "object"
                    }
                }
            },
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "openapi": "3.0.2",
            "paths": {
                "/": {
                    "get": {
                        "operationId": "root__get",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {}
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "summary": "Root"
                    }
                },
                "/predictions": {
                    "post": {
                        "description": "Run a single prediction on the model",
                        "operationId": "predict_predictions_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Request"
                                    }
                                }
                            }
                        },
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Response"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "summary": "Predict"
                    }
                }
            }
        },
        "meta": {
            "pollinator_group": [
                "T4"
            ]
        }
    },
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/voodoohop/dalle-playground": {
        "hash": "sha256:42059abaa3be2a4c69dda2b672a6ee2564ca26552b4479559e54a90cc59071f7",
        "full_url": "614871946825.dkr.ecr.us-east-1.amazonaws.com/voodoohop/dalle-playground@sha256:42059abaa3be2a4c69dda2b672a6ee2564ca26552b4479559e54a90cc59071f7",
        "openapi": {
            "components": {
                "schemas": {
                    "HTTPValidationError": {
                        "properties": {
                            "detail": {
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail",
                                "type": "array"
                            }
                        },
                        "title": "HTTPValidationError",
                        "type": "object"
                    },
                    "Input": {
                        "properties": {
                            "model_size": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/model_size"
                                    }
                                ],
                                "default": "MEGA",
                                "description": "Size of the model",
                                "x-order": 2
                            },
                            "num": {
                                "default": 4,
                                "description": "Number of images to generate",
                                "maximum": 20,
                                "minimum": 1,
                                "title": "Num",
                                "type": "integer",
                                "x-order": 1
                            },
                            "prompt": {
                                "description": "Image prompt",
                                "title": "Prompt",
                                "type": "string",
                                "x-order": 0
                            }
                        },
                        "required": [
                            "prompt"
                        ],
                        "title": "Input",
                        "type": "object"
                    },
                    "Output": {
                        "items": {
                            "format": "uri",
                            "type": "string"
                        },
                        "title": "Output",
                        "type": "array"
                    },
                    "Request": {
                        "description": "The request body for a prediction",
                        "properties": {
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output_file_prefix": {
                                "title": "Output File Prefix",
                                "type": "string"
                            }
                        },
                        "title": "Request",
                        "type": "object"
                    },
                    "Response": {
                        "description": "The response body for a prediction",
                        "properties": {
                            "error": {
                                "title": "Error",
                                "type": "string"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            }
                        },
                        "required": [
                            "status"
                        ],
                        "title": "Response",
                        "type": "object"
                    },
                    "Status": {
                        "description": "An enumeration.",
                        "enum": [
                            "processing",
                            "succeeded",
                            "failed"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "ValidationError": {
                        "properties": {
                            "loc": {
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location",
                                "type": "array"
                            },
                            "msg": {
                                "title": "Message",
                                "type": "string"
                            },
                            "type": {
                                "title": "Error Type",
                                "type": "string"
                            }
                        },
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "title": "ValidationError",
                        "type": "object"
                    },
                    "model_size": {
                        "description": "An enumeration.",
                        "enum": [
                            "MEGA"
                        ],
                        "title": "model_size",
                        "type": "string"
                    }
                }
            },
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "openapi": "3.0.2",
            "paths": {
                "/": {
                    "get": {
                        "operationId": "root__get",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {}
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "summary": "Root"
                    }
                },
                "/predictions": {
                    "post": {
                        "description": "Run a single prediction on the model",
                        "operationId": "predict_predictions_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Request"
                                    }
                                }
                            }
                        },
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Response"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "summary": "Predict"
                    }
                }
            }
        },
        "meta": {
            "pollinator_group": [
                "T4"
            ]
        }
    },
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/latent-diffusion-400m": {
        "hash": "sha256:27233942e8b1a2c3499fdc8bb15ab832306dadd0f21285693898be6c3586d4d4",
        "full_url": "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/latent-diffusion-400m@sha256:27233942e8b1a2c3499fdc8bb15ab832306dadd0f21285693898be6c3586d4d4",
        "openapi": {
            "components": {
                "schemas": {
                    "HTTPValidationError": {
                        "properties": {
                            "detail": {
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail",
                                "type": "array"
                            }
                        },
                        "title": "HTTPValidationError",
                        "type": "object"
                    },
                    "Input": {
                        "properties": {
                            "Diversity_scale": {
                                "default": 10,
                                "description": "As a rule of thumb, higher values of scale produce better samples at the cost of a reduced output diversity.",
                                "title": "Diversity Scale",
                                "type": "number",
                                "x-order": 4
                            },
                            "ETA": {
                                "default": 1,
                                "description": "Can be 0 or 1",
                                "title": "Eta",
                                "type": "integer",
                                "x-order": 2
                            },
                            "Height": {
                                "default": 256,
                                "description": "Height",
                                "title": "Height",
                                "type": "integer",
                                "x-order": 6
                            },
                            "Prompt": {
                                "default": "",
                                "description": "Your text prompt.",
                                "title": "Prompt",
                                "type": "string",
                                "x-order": 0
                            },
                            "Samples_in_parallel": {
                                "default": 4,
                                "description": "Batch size",
                                "title": "Samples In Parallel",
                                "type": "integer",
                                "x-order": 3
                            },
                            "Steps": {
                                "default": 100,
                                "description": "Number of steps to run the model",
                                "title": "Steps",
                                "type": "integer",
                                "x-order": 1
                            },
                            "Width": {
                                "default": 256,
                                "description": "Width",
                                "title": "Width",
                                "type": "integer",
                                "x-order": 5
                            }
                        },
                        "title": "Input",
                        "type": "object"
                    },
                    "Output": {
                        "title": "Output",
                        "type": "null"
                    },
                    "Request": {
                        "description": "The request body for a prediction",
                        "properties": {
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output_file_prefix": {
                                "title": "Output File Prefix",
                                "type": "string"
                            }
                        },
                        "title": "Request",
                        "type": "object"
                    },
                    "Response": {
                        "description": "The response body for a prediction",
                        "properties": {
                            "error": {
                                "title": "Error",
                                "type": "string"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            }
                        },
                        "required": [
                            "status"
                        ],
                        "title": "Response",
                        "type": "object"
                    },
                    "Status": {
                        "description": "An enumeration.",
                        "enum": [
                            "processing",
                            "succeeded",
                            "failed"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "ValidationError": {
                        "properties": {
                            "loc": {
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location",
                                "type": "array"
                            },
                            "msg": {
                                "title": "Message",
                                "type": "string"
                            },
                            "type": {
                                "title": "Error Type",
                                "type": "string"
                            }
                        },
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "title": "ValidationError",
                        "type": "object"
                    }
                }
            },
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "openapi": "3.0.2",
            "paths": {
                "/": {
                    "get": {
                        "operationId": "root__get",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {}
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "summary": "Root"
                    }
                },
                "/predictions": {
                    "post": {
                        "description": "Run a single prediction on the model",
                        "operationId": "predict_predictions_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Request"
                                    }
                                }
                            }
                        },
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Response"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "summary": "Predict"
                    }
                }
            }
        },
        "meta": {
            "pollinator_group": [
                "T4"
            ]
        }
    },
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/min-dalle": {
        "hash": "sha256:a4cd81dfb0dece527d829ffa5af4de64e32807ba696a1b638a48e73f8bf54ca3",
        "full_url": "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/min-dalle@sha256:a4cd81dfb0dece527d829ffa5af4de64e32807ba696a1b638a48e73f8bf54ca3",
        "openapi": {
            "components": {
                "schemas": {
                    "HTTPValidationError": {
                        "properties": {
                            "detail": {
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail",
                                "type": "array"
                            }
                        },
                        "title": "HTTPValidationError",
                        "type": "object"
                    },
                    "Input": {
                        "properties": {
                            "Prompt": {
                                "default": "Dali painting of WALL\u00b7E",
                                "description": "For long prompts, only the first 64 tokens will be used to generate the image.",
                                "title": "Prompt",
                                "type": "string",
                                "x-order": 0
                            },
                            "grid_size": {
                                "default": 1,
                                "description": "Size of the image grid.  4x4 takes about 15 seconds, 8x8 takes about 35 seconds",
                                "maximum": 8,
                                "minimum": 1,
                                "title": "Grid Size",
                                "type": "integer",
                                "x-order": 2
                            },
                            "intermediate_outputs": {
                                "default": true,
                                "description": "Whether to show intermediate outputs while running.  This adds less than a second to the run time.",
                                "title": "Intermediate Outputs",
                                "type": "boolean",
                                "x-order": 1
                            },
                            "log2_supercondition_factor": {
                                "default": 4,
                                "description": "Higher values result in better agreement with the text but a narrower variety of generated images",
                                "maximum": 6,
                                "minimum": 1,
                                "title": "Log2 Supercondition Factor",
                                "type": "integer",
                                "x-order": 3
                            }
                        },
                        "title": "Input",
                        "type": "object"
                    },
                    "Output": {
                        "items": {
                            "format": "uri",
                            "type": "string"
                        },
                        "title": "Output",
                        "type": "array",
                        "x-cog-array-type": "iterator"
                    },
                    "Request": {
                        "description": "The request body for a prediction",
                        "properties": {
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output_file_prefix": {
                                "title": "Output File Prefix",
                                "type": "string"
                            }
                        },
                        "title": "Request",
                        "type": "object"
                    },
                    "Response": {
                        "description": "The response body for a prediction",
                        "properties": {
                            "error": {
                                "title": "Error",
                                "type": "string"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            }
                        },
                        "required": [
                            "status"
                        ],
                        "title": "Response",
                        "type": "object"
                    },
                    "Status": {
                        "description": "An enumeration.",
                        "enum": [
                            "processing",
                            "succeeded",
                            "failed"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "ValidationError": {
                        "properties": {
                            "loc": {
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location",
                                "type": "array"
                            },
                            "msg": {
                                "title": "Message",
                                "type": "string"
                            },
                            "type": {
                                "title": "Error Type",
                                "type": "string"
                            }
                        },
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "title": "ValidationError",
                        "type": "object"
                    }
                }
            },
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "openapi": "3.0.2",
            "paths": {
                "/": {
                    "get": {
                        "operationId": "root__get",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {}
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "summary": "Root"
                    }
                },
                "/predictions": {
                    "post": {
                        "description": "Run a single prediction on the model",
                        "operationId": "predict_predictions_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Request"
                                    }
                                }
                            }
                        },
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Response"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "summary": "Predict"
                    }
                }
            }
        },
        "meta": {
            "featured": true,
            "url": "pollinations/min-dalle",
            "key": "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/min-dalle",
            "name": "DallE Mini",
            "img": "https://i.imgur.com/a9hByt4.png",
            "id2pop": "2 DALLE-Mega (Requires Colab Pro)",
            "path": "dalle",
            "category": "0 Featured",
            "credits": "Boris Dayma, Suraj Patil, Pedro Cuenca, Khalid Saifullah, Tanishq Abraham, Ph\u00fac L\u00ea, Luke, Luke Melas, Ritobrata Ghosh.",
            "description": "<img src=\"https://i.imgur.com/a9hByt4.png\" width=\"300\">\n\n\n\n*Sunset over a lake*\n\n\n\nThe new model everyone is excited about.\n",
            "pollinator_group": [
                "T4"
            ]
        }
    },
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/preset-frontpage": {
        "hash": "sha256:c6cb57059abcf615dd96ec7b86f5001ecf5abc33b3dc8750780eb14a5e1a4ce8",
        "full_url": "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/preset-frontpage@sha256:c6cb57059abcf615dd96ec7b86f5001ecf5abc33b3dc8750780eb14a5e1a4ce8",
        "openapi": {
            "components": {
                "schemas": {
                    "HTTPValidationError": {
                        "properties": {
                            "detail": {
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail",
                                "type": "array"
                            }
                        },
                        "title": "HTTPValidationError",
                        "type": "object"
                    },
                    "Input": {
                        "properties": {
                            "Diversity_scale": {
                                "default": 10,
                                "description": "As a rule of thumb, higher values of scale produce better samples at the cost of a reduced output diversity.",
                                "title": "Diversity Scale",
                                "type": "number",
                                "x-order": 4
                            },
                            "ETA": {
                                "default": 1,
                                "description": "Can be 0 or 1",
                                "title": "Eta",
                                "type": "integer",
                                "x-order": 2
                            },
                            "Height": {
                                "default": 256,
                                "description": "Height",
                                "title": "Height",
                                "type": "integer",
                                "x-order": 6
                            },
                            "Prompt": {
                                "default": "",
                                "description": "Your text prompt.",
                                "title": "Prompt",
                                "type": "string",
                                "x-order": 0
                            },
                            "Samples_in_parallel": {
                                "default": 3,
                                "description": "Batch size",
                                "title": "Samples In Parallel",
                                "type": "integer",
                                "x-order": 3
                            },
                            "Steps": {
                                "default": 100,
                                "description": "Number of steps to run the model",
                                "title": "Steps",
                                "type": "integer",
                                "x-order": 1
                            },
                            "Width": {
                                "default": 256,
                                "description": "Width",
                                "title": "Width",
                                "type": "integer",
                                "x-order": 5
                            }
                        },
                        "title": "Input",
                        "type": "object"
                    },
                    "Output": {
                        "title": "Output",
                        "type": "null"
                    },
                    "Request": {
                        "description": "The request body for a prediction",
                        "properties": {
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output_file_prefix": {
                                "title": "Output File Prefix",
                                "type": "string"
                            }
                        },
                        "title": "Request",
                        "type": "object"
                    },
                    "Response": {
                        "description": "The response body for a prediction",
                        "properties": {
                            "error": {
                                "title": "Error",
                                "type": "string"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            }
                        },
                        "required": [
                            "status"
                        ],
                        "title": "Response",
                        "type": "object"
                    },
                    "Status": {
                        "description": "An enumeration.",
                        "enum": [
                            "processing",
                            "succeeded",
                            "failed"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "ValidationError": {
                        "properties": {
                            "loc": {
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location",
                                "type": "array"
                            },
                            "msg": {
                                "title": "Message",
                                "type": "string"
                            },
                            "type": {
                                "title": "Error Type",
                                "type": "string"
                            }
                        },
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "title": "ValidationError",
                        "type": "object"
                    }
                }
            },
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "openapi": "3.0.2",
            "paths": {
                "/": {
                    "get": {
                        "operationId": "root__get",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {}
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "summary": "Root"
                    }
                },
                "/predictions": {
                    "post": {
                        "description": "Run a single prediction on the model",
                        "operationId": "predict_predictions_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Request"
                                    }
                                }
                            }
                        },
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Response"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "summary": "Predict"
                    }
                }
            }
        },
        "meta": {
            "pollinator_group": [
                "T4"
            ]
        }
    },
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/majesty-diffusion-cog": {
        "hash": "sha256:b8cf2e675991cf79cc0b310d49d43276205c353098466cdc7589cc797caaa180",
        "full_url": "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/majesty-diffusion-cog@sha256:b8cf2e675991cf79cc0b310d49d43276205c353098466cdc7589cc797caaa180",
        "openapi": {
            "components": {
                "schemas": {
                    "HTTPValidationError": {
                        "properties": {
                            "detail": {
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail",
                                "type": "array"
                            }
                        },
                        "title": "HTTPValidationError",
                        "type": "object"
                    },
                    "Input": {
                        "properties": {
                            "Prompt": {
                                "default": "",
                                "description": "Your text prompt.",
                                "title": "Prompt",
                                "type": "string",
                                "x-order": 0
                            },
                            "latent_diffusion_guidance_scale": {
                                "default": 12,
                                "description": "Balance between creativity and coherent composition. Try values between 0-15. Lower values help with text interpretation and creativity, higher help with composition. ",
                                "title": "Latent Diffusion Guidance Scale",
                                "type": "integer",
                                "x-order": 2
                            },
                            "latent_diffusion_model": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/latent_diffusion_model"
                                    }
                                ],
                                "default": "finetuned",
                                "description": "Original is the previous LAION model. Finetuned should be better but cannot do text. One of:  [\"original\", \"finetuned\", \"ongo (fine tuned in paintings)\", \"erlich (fine tuned in logos)\"]",
                                "x-order": 1
                            }
                        },
                        "title": "Input",
                        "type": "object"
                    },
                    "Output": {
                        "title": "Output",
                        "type": "null"
                    },
                    "Request": {
                        "description": "The request body for a prediction",
                        "properties": {
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output_file_prefix": {
                                "title": "Output File Prefix",
                                "type": "string"
                            }
                        },
                        "title": "Request",
                        "type": "object"
                    },
                    "Response": {
                        "description": "The response body for a prediction",
                        "properties": {
                            "error": {
                                "title": "Error",
                                "type": "string"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            }
                        },
                        "required": [
                            "status"
                        ],
                        "title": "Response",
                        "type": "object"
                    },
                    "Status": {
                        "description": "An enumeration.",
                        "enum": [
                            "processing",
                            "succeeded",
                            "failed"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "ValidationError": {
                        "properties": {
                            "loc": {
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location",
                                "type": "array"
                            },
                            "msg": {
                                "title": "Message",
                                "type": "string"
                            },
                            "type": {
                                "title": "Error Type",
                                "type": "string"
                            }
                        },
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "title": "ValidationError",
                        "type": "object"
                    },
                    "latent_diffusion_model": {
                        "description": "An enumeration.",
                        "enum": [
                            "original",
                            "finetuned",
                            "ongo (fine tuned in paintings)",
                            "erlich (fine tuned in logos)"
                        ],
                        "title": "latent_diffusion_model",
                        "type": "string"
                    }
                }
            },
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "openapi": "3.0.2",
            "paths": {
                "/": {
                    "get": {
                        "operationId": "root__get",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {}
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "summary": "Root"
                    }
                },
                "/predictions": {
                    "post": {
                        "description": "Run a single prediction on the model",
                        "operationId": "predict_predictions_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Request"
                                    }
                                }
                            }
                        },
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Response"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "summary": "Predict"
                    }
                }
            }
        },
        "meta": {
            "featured": true,
            "url": "pollinations/majesty-diffusion-cog",
            "key": "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/majesty-diffusion-cog",
            "name": "Majesty Diffusion",
            "id2pop": "0 Majesty Diffusion",
            "path": "majestydiffusion",
            "category": "0 Featured",
            "credits": "by [dango233](https://github.com/Dango233/) and [apolinario (@multimodalart)](https://twitter.com/multimodalart).",
            "description": "![castle](https://user-images.githubusercontent.com/788417/169712054-fe3bf4bd-4473-4070-ba69-0f74f5c3e475.png)\n\n\n\nMajesty Diffusion is a mix of LAION and Disco Diffusion. Creates images that are more coherent and focused on individual objects rather than the complexity images with lots of small details in every part.\n\n\n\n---\n\n\n\nAccess our [Majestic Guide](https://multimodal.art/majesty-diffusion) (_under construction_), our [GitHub](https://github.com/multimodalart/majesty-diffusion), join our community on [Discord](https://discord.gg/yNBtQBEDfZ) or reach out via [@multimodalart on Twitter](https://twitter.com/multimodalart))\n\n\n\nby [dango233](https://github.com/Dango233/) and [apolinario (@multimodalart)](https://twitter.com/multimodalart). \n\nThe LAION-400M-trained model and the modified inference code are from [CompVis Latent Diffusion](https://github.com/CompVis/latent-diffusion). The guided-diffusion method is modified by Dango233 based on [Katherine Crowson](https://twitter.com/RiversHaveWings)'s guided diffusion notebook. multimodalart savable settings, MMC and assembled the Colab. Check the complete list on our GitHub. Some functions and methods are from various code masters (nsheppard, DanielRussRuss and others)\n",
            "img": "https://user-images.githubusercontent.com/788417/169712054-fe3bf4bd-4473-4070-ba69-0f74f5c3e475.png",
            "pollinator_group": [
                "T4"
            ]
        }
    },
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/avatarclip": {
        "hash": "sha256:593b71edd0d471d9748229e2ed84899ae0132ac20e04846e2610a374dad676e2",
        "full_url": "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/avatarclip@sha256:593b71edd0d471d9748229e2ed84899ae0132ac20e04846e2610a374dad676e2",
        "openapi": {
            "components": {
                "schemas": {
                    "HTTPValidationError": {
                        "properties": {
                            "detail": {
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail",
                                "type": "array"
                            }
                        },
                        "title": "HTTPValidationError",
                        "type": "object"
                    },
                    "Input": {
                        "properties": {
                            "text": {
                                "default": "overweight sumo wrestler",
                                "description": "Coarse character prompt",
                                "title": "Text",
                                "type": "string",
                                "x-order": 0
                            }
                        },
                        "title": "Input",
                        "type": "object"
                    },
                    "Output": {
                        "format": "uri",
                        "title": "Output",
                        "type": "string"
                    },
                    "Request": {
                        "description": "The request body for a prediction",
                        "properties": {
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output_file_prefix": {
                                "title": "Output File Prefix",
                                "type": "string"
                            }
                        },
                        "title": "Request",
                        "type": "object"
                    },
                    "Response": {
                        "description": "The response body for a prediction",
                        "properties": {
                            "error": {
                                "title": "Error",
                                "type": "string"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            }
                        },
                        "required": [
                            "status"
                        ],
                        "title": "Response",
                        "type": "object"
                    },
                    "Status": {
                        "description": "An enumeration.",
                        "enum": [
                            "processing",
                            "succeeded",
                            "failed"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "ValidationError": {
                        "properties": {
                            "loc": {
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location",
                                "type": "array"
                            },
                            "msg": {
                                "title": "Message",
                                "type": "string"
                            },
                            "type": {
                                "title": "Error Type",
                                "type": "string"
                            }
                        },
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "title": "ValidationError",
                        "type": "object"
                    }
                }
            },
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "openapi": "3.0.2",
            "paths": {
                "/": {
                    "get": {
                        "operationId": "root__get",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {}
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "summary": "Root"
                    }
                },
                "/predictions": {
                    "post": {
                        "description": "Run a single prediction on the model",
                        "operationId": "predict_predictions_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Request"
                                    }
                                }
                            }
                        },
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Response"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "summary": "Predict"
                    }
                }
            }
        },
        "meta": {
            "featured": true,
            "url": "pollinations/avatar-clip",
            "key": "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/avatarclip",
            "img": "https://i.imgur.com/a9hByt4.png",
            "name": "Avatar Clip",
            "id2pop": "",
            "path": "avatarclip",
            "category": "0 Featured",
            "description": "<img src=\"https://i.imgur.com/a9hByt4.png\" width=\"300\"> \n\n\n\nThis is a model that clips the avatar of a user to a specific part of the image. It is useful for creating avatars for other users.\n\n\n\n---\n\n\n\nAccess our Avatar Clip Guide(https://multimodal.art/avatar-clip) (_under construction_), our [GitHub](",
            "pollinator_group": [
                "T4"
            ]
        }
    },
    "r8.im/jingyunliang/swinir": {
        "hash": "sha256:ca70ef67b84d8d36930c75d62704321478f83eb44e0e762ea1426b02e68527bc",
        "full_url": "r8.im/jingyunliang/swinir@sha256:ca70ef67b84d8d36930c75d62704321478f83eb44e0e762ea1426b02e68527bc",
        "openapi": {
            "components": {
                "schemas": {
                    "Input": {
                        "type": "object",
                        "properties": {
                            "image": {
                                "type": "string",
                                "format": "uri",
                                "description": "input image",
                                "x-order": 0
                            },
                            "task_type": {
                                "type": "string",
                                "description": "image restoration task type",
                                "default": "Real-World Image Super-Resolution",
                                "enum": [
                                    "Real-World Image Super-Resolution",
                                    "Grayscale Image Denoising",
                                    "Color Image Denoising",
                                    "JPEG Compression Artifact Reduction"
                                ],
                                "x-order": 1
                            },
                            "noise": {
                                "type": "integer",
                                "description": "noise level, activated for Grayscale Image Denoising and Color Image Denoising. Leave it as default or arbitrary if other tasks are selected",
                                "default": 15,
                                "enum": [
                                    "15",
                                    "25",
                                    "50"
                                ],
                                "x-order": 2
                            },
                            "jpeg": {
                                "type": "integer",
                                "description": "scale factor, activated for JPEG Compression Artifact Reduction. Leave it as default or arbitrary if other tasks are selected",
                                "default": 40,
                                "enum": [
                                    "10",
                                    "20",
                                    "30",
                                    "40"
                                ],
                                "x-order": 3
                            }
                        }
                    },
                    "Output": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "file": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-order": 0
                                },
                                "text": {
                                    "type": "string",
                                    "x-order": 1
                                }
                            }
                        }
                    }
                }
            }
        },
        "meta": {
            "featured": true,
            "url": "jingyunliang/swinir",
            "key": "r8.im/jingyunliang/swinir@sha256:9d91795e944f3a585fa83f749617fc75821bea8b323348f39cf84f8fd0cbc2f7",
            "name": "Swinir",
            "img": "https://i.imgur.com/a9hByt4.png",
            "id2pop": "2 SwinIR Super-Resolution",
            "path": "swinir",
            "category": "0 Featured",
            "credits": "[Jingyun Liang](https://github.com/JingyunLiang)",
            "description": "<img src=\"https://i.imgur.com/BKvDhnf.png\" width=\"300\" height=\"300\" />\n\n\n\nUses [SwinIR](https://github.com/JingyunLiang/SwinIR) to perform 4x neural super-resolution (creates HD images from low resolution)\n\n\n\n---\n\nCredits: [Jingyun Liang]((https://github.com/JingyunLiang)\n\nLicense: MIT",
            "pollinator_group": [
                "T4"
            ]
        }
    },
    "r8.im/nightmareai/disco-diffusion": {
        "hash": "sha256:d632a98e812ac2a8e330aff867826ba2af9076f21b7d195044b0d99beae7effa",
        "full_url": "r8.im/nightmareai/disco-diffusion@sha256:d632a98e812ac2a8e330aff867826ba2af9076f21b7d195044b0d99beae7effa",
        "openapi": {
            "components": {
                "schemas": {
                    "HTTPValidationError": {
                        "properties": {
                            "detail": {
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail",
                                "type": "array"
                            }
                        },
                        "title": "HTTPValidationError",
                        "type": "object"
                    },
                    "Input": {
                        "properties": {
                            "RN101": {
                                "default": false,
                                "description": "Use RN101 model",
                                "title": "Rn101",
                                "type": "boolean",
                                "x-order": 15
                            },
                            "RN101_quickgelu_yfcc15m": {
                                "default": false,
                                "description": "Use RN101_quickgelu_yfcc15m model",
                                "title": "Rn101 Quickgelu Yfcc15M",
                                "type": "boolean",
                                "x-order": 28
                            },
                            "RN101_yfcc15m": {
                                "default": false,
                                "description": "Use RN101_yfcc15m model",
                                "title": "Rn101 Yfcc15M",
                                "type": "boolean",
                                "x-order": 27
                            },
                            "RN50": {
                                "default": true,
                                "description": "Use RN50 model",
                                "title": "Rn50",
                                "type": "boolean",
                                "x-order": 10
                            },
                            "RN50_cc12m": {
                                "default": false,
                                "description": "Use RN50_cc12m model",
                                "title": "Rn50 Cc12M",
                                "type": "boolean",
                                "x-order": 24
                            },
                            "RN50_quickgelu_cc12m": {
                                "default": false,
                                "description": "Use RN50_quickgelu_cc12m model",
                                "title": "Rn50 Quickgelu Cc12M",
                                "type": "boolean",
                                "x-order": 26
                            },
                            "RN50_quickgelu_yfcc15m": {
                                "default": false,
                                "description": "Use RN50_quickgelu_yfcc15m model",
                                "title": "Rn50 Quickgelu Yfcc15M",
                                "type": "boolean",
                                "x-order": 25
                            },
                            "RN50_yffcc15m": {
                                "default": false,
                                "description": "Use RN50_yffcc15m model",
                                "title": "Rn50 Yffcc15M",
                                "type": "boolean",
                                "x-order": 23
                            },
                            "RN50x101": {
                                "default": false,
                                "description": "Use RN50x101 model",
                                "title": "Rn50X101",
                                "type": "boolean",
                                "x-order": 14
                            },
                            "RN50x16": {
                                "default": false,
                                "description": "Use RN50x16 model",
                                "title": "Rn50X16",
                                "type": "boolean",
                                "x-order": 12
                            },
                            "RN50x4": {
                                "default": false,
                                "description": "Use RN50x4 model",
                                "title": "Rn50X4",
                                "type": "boolean",
                                "x-order": 11
                            },
                            "RN50x64": {
                                "default": false,
                                "description": "Use RN50x64 model",
                                "title": "Rn50X64",
                                "type": "boolean",
                                "x-order": 13
                            },
                            "ViTB16": {
                                "default": true,
                                "description": "Use ViTB16 model",
                                "title": "Vitb16",
                                "type": "boolean",
                                "x-order": 7
                            },
                            "ViTB16_laion400m_e31": {
                                "default": false,
                                "description": "Use ViTB16_laion400m_e31 model",
                                "title": "Vitb16 Laion400M E31",
                                "type": "boolean",
                                "x-order": 21
                            },
                            "ViTB16_laion400m_e32": {
                                "default": false,
                                "description": "Use ViTB16_laion400m_e32 model",
                                "title": "Vitb16 Laion400M E32",
                                "type": "boolean",
                                "x-order": 22
                            },
                            "ViTB32": {
                                "default": true,
                                "description": "Use ViTB32 model",
                                "title": "Vitb32",
                                "type": "boolean",
                                "x-order": 6
                            },
                            "ViTB32_laion2b_e16": {
                                "default": false,
                                "description": "Use ViTB32_laion2b_e16 model",
                                "title": "Vitb32 Laion2B E16",
                                "type": "boolean",
                                "x-order": 16
                            },
                            "ViTB32_laion400m_e31": {
                                "default": false,
                                "description": "Use ViTB32_laion400m_e31 model",
                                "title": "Vitb32 Laion400M E31",
                                "type": "boolean",
                                "x-order": 17
                            },
                            "ViTB32_laion400m_e32": {
                                "default": false,
                                "description": "Use ViTB32_laion400m_e32 model",
                                "title": "Vitb32 Laion400M E32",
                                "type": "boolean",
                                "x-order": 18
                            },
                            "ViTB32quickgelu_laion400m_e31": {
                                "default": false,
                                "description": "Use ViTB32quickgelu_laion400m_e31 model",
                                "title": "Vitb32Quickgelu Laion400M E31",
                                "type": "boolean",
                                "x-order": 19
                            },
                            "ViTB32quickgelu_laion400m_e32": {
                                "default": false,
                                "description": "Use ViTB32quickgelu_laion400m_e32 model",
                                "title": "Vitb32Quickgelu Laion400M E32",
                                "type": "boolean",
                                "x-order": 20
                            },
                            "ViTL14": {
                                "default": false,
                                "description": "Use ViTB14 model",
                                "title": "Vitl14",
                                "type": "boolean",
                                "x-order": 8
                            },
                            "ViTL14_336": {
                                "default": false,
                                "description": "Use ViTL14_336 model",
                                "title": "Vitl14 336",
                                "type": "boolean",
                                "x-order": 9
                            },
                            "clip_guidance_scale": {
                                "default": 5000,
                                "description": "CLIP Guidance Scale",
                                "title": "Clip Guidance Scale",
                                "type": "integer",
                                "x-order": 30
                            },
                            "cutn_batches": {
                                "default": 4,
                                "description": "Cut Batches",
                                "title": "Cutn Batches",
                                "type": "integer",
                                "x-order": 34
                            },
                            "diffusion_model": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/diffusion_model"
                                    }
                                ],
                                "default": "512x512_diffusion_uncond_finetune_008100",
                                "description": "Diffusion Model",
                                "x-order": 4
                            },
                            "diffusion_sampling_mode": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/diffusion_sampling_mode"
                                    }
                                ],
                                "default": "ddim",
                                "description": "Diffusion Sampling Mode",
                                "x-order": 5
                            },
                            "display_rate": {
                                "default": 20,
                                "description": "Steps between outputs, lower numbers may slow down generation.",
                                "title": "Display Rate",
                                "type": "integer",
                                "x-order": 41
                            },
                            "height": {
                                "default": 768,
                                "description": "Height of the output image, higher numbers will take longer",
                                "title": "Height",
                                "type": "integer",
                                "x-order": 3
                            },
                            "init_image": {
                                "description": "Initial image to start generation from",
                                "format": "uri",
                                "title": "Init Image",
                                "type": "string",
                                "x-order": 36
                            },
                            "init_scale": {
                                "default": 1000,
                                "description": "Initial Scale",
                                "title": "Init Scale",
                                "type": "integer",
                                "x-order": 38
                            },
                            "prompt": {
                                "default": "A beautiful painting of a singular lighthouse, shining its light across a tumultuous sea of blood by greg rutkowski and thomas kinkade, Trending on artstation.",
                                "description": "Text Prompt",
                                "title": "Prompt",
                                "type": "string",
                                "x-order": 1
                            },
                            "range_scale": {
                                "default": 150,
                                "description": "Range Scale",
                                "title": "Range Scale",
                                "type": "integer",
                                "x-order": 32
                            },
                            "sat_scale": {
                                "default": 0,
                                "description": "Saturation Scale",
                                "title": "Sat Scale",
                                "type": "integer",
                                "x-order": 33
                            },
                            "seed": {
                                "description": "Seed (leave empty to use a random seed)",
                                "maximum": 4294967295,
                                "minimum": 0,
                                "title": "Seed",
                                "type": "integer",
                                "x-order": 42
                            },
                            "skip_augs": {
                                "default": false,
                                "description": "Skip Augmentations",
                                "title": "Skip Augs",
                                "type": "boolean",
                                "x-order": 35
                            },
                            "skip_steps": {
                                "default": 10,
                                "description": "Skip Steps",
                                "title": "Skip Steps",
                                "type": "integer",
                                "x-order": 40
                            },
                            "steps": {
                                "default": 100,
                                "description": "Number of steps, higher numbers will give more refined output but will take longer",
                                "maximum": 1000,
                                "minimum": 1,
                                "title": "Steps",
                                "type": "integer",
                                "x-order": 0
                            },
                            "target_image": {
                                "description": "Target image to generate towards, similarly to the text prompt",
                                "format": "uri",
                                "title": "Target Image",
                                "type": "string",
                                "x-order": 37
                            },
                            "target_scale": {
                                "default": 20000,
                                "description": "Target Scale",
                                "title": "Target Scale",
                                "type": "integer",
                                "x-order": 39
                            },
                            "tv_scale": {
                                "default": 0,
                                "description": "TV Scale",
                                "title": "Tv Scale",
                                "type": "integer",
                                "x-order": 31
                            },
                            "use_secondary_model": {
                                "default": true,
                                "description": "Use secondary model",
                                "title": "Use Secondary Model",
                                "type": "boolean",
                                "x-order": 29
                            },
                            "width": {
                                "default": 1280,
                                "description": "Width of the output image, higher numbers will take longer",
                                "title": "Width",
                                "type": "integer",
                                "x-order": 2
                            }
                        },
                        "title": "Input",
                        "type": "object"
                    },
                    "Output": {
                        "items": {
                            "format": "uri",
                            "type": "string"
                        },
                        "title": "Output",
                        "type": "array",
                        "x-cog-array-type": "iterator"
                    },
                    "Request": {
                        "description": "The request body for a prediction",
                        "properties": {
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output_file_prefix": {
                                "title": "Output File Prefix",
                                "type": "string"
                            }
                        },
                        "title": "Request",
                        "type": "object"
                    },
                    "Response": {
                        "description": "The response body for a prediction",
                        "properties": {
                            "error": {
                                "title": "Error",
                                "type": "string"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            }
                        },
                        "required": [
                            "status"
                        ],
                        "title": "Response",
                        "type": "object"
                    },
                    "Status": {
                        "description": "An enumeration.",
                        "enum": [
                            "processing",
                            "succeeded",
                            "failed"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "ValidationError": {
                        "properties": {
                            "loc": {
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location",
                                "type": "array"
                            },
                            "msg": {
                                "title": "Message",
                                "type": "string"
                            },
                            "type": {
                                "title": "Error Type",
                                "type": "string"
                            }
                        },
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "title": "ValidationError",
                        "type": "object"
                    },
                    "diffusion_model": {
                        "description": "An enumeration.",
                        "enum": [
                            "512x512_diffusion_uncond_finetune_008100",
                            "256x256_diffusion_uncond",
                            "pixel_art_diffusion_hard_256",
                            "pixel_art_diffusion_soft_256",
                            "pixelartdiffusion_expanded",
                            "pixelartdiffusion4k",
                            "PADexpanded",
                            "watercolordiffusion",
                            "watercolordiffusion_2",
                            "PulpSciFiDiffusion",
                            "256x256_openai_comics_faces_by_alex_spirin_084000",
                            "lsun_uncond_100M_1200K_bs128",
                            "ukiyoe_diffusion_256_022000.pt",
                            "liminal_diffusion"
                        ],
                        "title": "diffusion_model",
                        "type": "string"
                    },
                    "diffusion_sampling_mode": {
                        "description": "An enumeration.",
                        "enum": [
                            "plms",
                            "ddim"
                        ],
                        "title": "diffusion_sampling_mode",
                        "type": "string"
                    }
                }
            },
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "openapi": "3.0.2",
            "paths": {
                "/": {
                    "get": {
                        "operationId": "root__get",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {}
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "summary": "Root"
                    }
                },
                "/predictions": {
                    "post": {
                        "description": "Run a single prediction on the model",
                        "operationId": "predict_predictions_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Request"
                                    }
                                }
                            }
                        },
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Response"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "summary": "Predict"
                    }
                }
            }
        },
        "meta": {}
    },
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/adampi": {
        "hash": "sha256:88261d8bb6532f2c78ff2a684fa770c34eb93fb27ce5d90313366c00ded0e10a",
        "full_url": "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/adampi@sha256:88261d8bb6532f2c78ff2a684fa770c34eb93fb27ce5d90313366c00ded0e10a",
        "openapi": {
            "components": {
                "schemas": {
                    "HTTPValidationError": {
                        "properties": {
                            "detail": {
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail",
                                "type": "array"
                            }
                        },
                        "title": "HTTPValidationError",
                        "type": "object"
                    },
                    "Input": {
                        "properties": {
                            "image": {
                                "description": "Image",
                                "format": "uri",
                                "title": "Image",
                                "type": "string",
                                "x-order": 0
                            }
                        },
                        "required": [
                            "image"
                        ],
                        "title": "Input",
                        "type": "object"
                    },
                    "Output": {
                        "format": "uri",
                        "title": "Output",
                        "type": "string"
                    },
                    "Request": {
                        "description": "The request body for a prediction",
                        "properties": {
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output_file_prefix": {
                                "title": "Output File Prefix",
                                "type": "string"
                            }
                        },
                        "title": "Request",
                        "type": "object"
                    },
                    "Response": {
                        "description": "The response body for a prediction",
                        "properties": {
                            "error": {
                                "title": "Error",
                                "type": "string"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            }
                        },
                        "required": [
                            "status"
                        ],
                        "title": "Response",
                        "type": "object"
                    },
                    "Status": {
                        "description": "An enumeration.",
                        "enum": [
                            "processing",
                            "succeeded",
                            "failed"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "ValidationError": {
                        "properties": {
                            "loc": {
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location",
                                "type": "array"
                            },
                            "msg": {
                                "title": "Message",
                                "type": "string"
                            },
                            "type": {
                                "title": "Error Type",
                                "type": "string"
                            }
                        },
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "title": "ValidationError",
                        "type": "object"
                    }
                }
            },
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "openapi": "3.0.2",
            "paths": {
                "/": {
                    "get": {
                        "operationId": "root__get",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {}
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "summary": "Root"
                    }
                },
                "/predictions": {
                    "post": {
                        "description": "Run a single prediction on the model",
                        "operationId": "predict_predictions_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Request"
                                    }
                                }
                            }
                        },
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Response"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "summary": "Predict"
                    }
                }
            }
        },
        "meta": {
            "featured": true,
            "url": "pollinations/adampi",
            "key": "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/adampi",
            "name": "AdaMPI",
            "img": "https://i.imgur.com/a9hByt4.png",
            "id2pop": "1 Photo3D",
            "path": "adampi",
            "category": "0 Featured",
            "credits": "",
            "description": "<img src=\"https://i.imgur.com/BKvDhnf.png\" width=\"300\" height=\"300\" />\n\n\n\nUses [SwinIR](https://github.com/JingyunLiang/SwinIR) to perform 4x neural super-resolution (creates HD images from low resolution)\n\n\n\n---\n\nCredits: [Jingyun Liang]((https://github.com/JingyunLiang)\n\nLicense: MIT",
            "pollinator_group": [
                "T4"
            ]
        }
    },
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/disco-diffusion": {
        "hash": "sha256:5e9e4334a0c8ad15255fe969ba6473e4d46b79cd665b474b50727cc03ed31710",
        "full_url": "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/disco-diffusion@sha256:5e9e4334a0c8ad15255fe969ba6473e4d46b79cd665b474b50727cc03ed31710",
        "openapi": {
            "components": {
                "schemas": {
                    "HTTPValidationError": {
                        "properties": {
                            "detail": {
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail",
                                "type": "array"
                            }
                        },
                        "title": "HTTPValidationError",
                        "type": "object"
                    },
                    "Input": {
                        "properties": {
                            "clip_guidance_scale": {
                                "default": 5000,
                                "description": "CLIP Guidance Scale",
                                "title": "Clip Guidance Scale",
                                "type": "integer",
                                "x-order": 7
                            },
                            "cutn_batches": {
                                "default": 4,
                                "description": "Cut Batches",
                                "title": "Cutn Batches",
                                "type": "integer",
                                "x-order": 11
                            },
                            "diffusion_model": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/diffusion_model"
                                    }
                                ],
                                "default": "512x512_diffusion_uncond_finetune_008100",
                                "description": "Diffusion Model",
                                "x-order": 4
                            },
                            "diffusion_sampling_mode": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/diffusion_sampling_mode"
                                    }
                                ],
                                "default": "ddim",
                                "description": "Diffusion Sampling Mode",
                                "x-order": 5
                            },
                            "display_rate": {
                                "default": 20,
                                "description": "Steps between outputs, lower numbers may slow down generation.",
                                "title": "Display Rate",
                                "type": "integer",
                                "x-order": 18
                            },
                            "height": {
                                "default": 768,
                                "description": "Height of the output image, higher numbers will take longer",
                                "title": "Height",
                                "type": "integer",
                                "x-order": 3
                            },
                            "init_image": {
                                "description": "Initial image to start generation from",
                                "format": "uri",
                                "title": "Init Image",
                                "type": "string",
                                "x-order": 13
                            },
                            "init_scale": {
                                "default": 1000,
                                "description": "Initial Scale",
                                "title": "Init Scale",
                                "type": "integer",
                                "x-order": 15
                            },
                            "prompt": {
                                "default": "A beautiful painting of a singular lighthouse, shining its light across a tumultuous sea of blood by greg rutkowski and thomas kinkade, Trending on artstation.",
                                "description": "Text Prompt",
                                "title": "Prompt",
                                "type": "string",
                                "x-order": 0
                            },
                            "range_scale": {
                                "default": 150,
                                "description": "Range Scale",
                                "title": "Range Scale",
                                "type": "integer",
                                "x-order": 9
                            },
                            "sat_scale": {
                                "default": 0,
                                "description": "Saturation Scale",
                                "title": "Sat Scale",
                                "type": "integer",
                                "x-order": 10
                            },
                            "seed": {
                                "description": "Seed (leave empty to use a random seed)",
                                "maximum": 4294967295,
                                "minimum": 0,
                                "title": "Seed",
                                "type": "integer",
                                "x-order": 19
                            },
                            "skip_augs": {
                                "default": false,
                                "description": "Skip Augmentations",
                                "title": "Skip Augs",
                                "type": "boolean",
                                "x-order": 12
                            },
                            "skip_steps": {
                                "default": 10,
                                "description": "Skip Steps",
                                "title": "Skip Steps",
                                "type": "integer",
                                "x-order": 17
                            },
                            "steps": {
                                "default": 100,
                                "description": "Number of steps, higher numbers will give more refined output but will take longer",
                                "title": "Steps",
                                "type": "integer",
                                "x-order": 1
                            },
                            "target_image": {
                                "description": "Target image to generate towards, similarly to the text prompt",
                                "format": "uri",
                                "title": "Target Image",
                                "type": "string",
                                "x-order": 14
                            },
                            "target_scale": {
                                "default": 20000,
                                "description": "Target Scale",
                                "title": "Target Scale",
                                "type": "integer",
                                "x-order": 16
                            },
                            "tv_scale": {
                                "default": 0,
                                "description": "TV Scale",
                                "title": "Tv Scale",
                                "type": "integer",
                                "x-order": 8
                            },
                            "use_secondary_model": {
                                "default": true,
                                "description": "Use secondary model",
                                "title": "Use Secondary Model",
                                "type": "boolean",
                                "x-order": 6
                            },
                            "width": {
                                "default": 1280,
                                "description": "Width of the output image, higher numbers will take longer",
                                "title": "Width",
                                "type": "integer",
                                "x-order": 2
                            }
                        },
                        "title": "Input",
                        "type": "object"
                    },
                    "Output": {
                        "items": {
                            "format": "uri",
                            "type": "string"
                        },
                        "title": "Output",
                        "type": "array",
                        "x-cog-array-type": "iterator"
                    },
                    "Request": {
                        "description": "The request body for a prediction",
                        "properties": {
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output_file_prefix": {
                                "title": "Output File Prefix",
                                "type": "string"
                            }
                        },
                        "title": "Request",
                        "type": "object"
                    },
                    "Response": {
                        "description": "The response body for a prediction",
                        "properties": {
                            "error": {
                                "title": "Error",
                                "type": "string"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            }
                        },
                        "required": [
                            "status"
                        ],
                        "title": "Response",
                        "type": "object"
                    },
                    "Status": {
                        "description": "An enumeration.",
                        "enum": [
                            "processing",
                            "succeeded",
                            "failed"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "ValidationError": {
                        "properties": {
                            "loc": {
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location",
                                "type": "array"
                            },
                            "msg": {
                                "title": "Message",
                                "type": "string"
                            },
                            "type": {
                                "title": "Error Type",
                                "type": "string"
                            }
                        },
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "title": "ValidationError",
                        "type": "object"
                    },
                    "diffusion_model": {
                        "description": "An enumeration.",
                        "enum": [
                            "512x512_diffusion_uncond_finetune_008100",
                            "256x256_diffusion_uncond",
                            "pixel_art_diffusion_hard_256",
                            "pixel_art_diffusion_soft_256",
                            "pixelartdiffusion_expanded",
                            "pixelartdiffusion4k",
                            "PADexpanded",
                            "watercolordiffusion",
                            "watercolordiffusion_2",
                            "PulpSciFiDiffusion",
                            "256x256_openai_comics_faces_by_alex_spirin_084000",
                            "lsun_uncond_100M_1200K_bs128",
                            "ukiyoe_diffusion_256_022000.pt",
                            "liminal_diffusion"
                        ],
                        "title": "diffusion_model",
                        "type": "string"
                    },
                    "diffusion_sampling_mode": {
                        "description": "An enumeration.",
                        "enum": [
                            "plms",
                            "ddim"
                        ],
                        "title": "diffusion_sampling_mode",
                        "type": "string"
                    }
                }
            },
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "openapi": "3.0.2",
            "paths": {
                "/": {
                    "get": {
                        "operationId": "root__get",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {}
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "summary": "Root"
                    }
                },
                "/predictions": {
                    "post": {
                        "description": "Run a single prediction on the model",
                        "operationId": "predict_predictions_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Request"
                                    }
                                }
                            }
                        },
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Response"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "summary": "Predict"
                    }
                }
            }
        },
        "meta": {
            "featured": true,
            "url": "pollinations/disco-diffusion",
            "key": "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/disco-diffusion",
            "name": "Disco Diffusion",
            "id2pop": "1 Disco Diffusion",
            "path": "discodiffusion",
            "category": "0 Featured",
            "credits": "Credits: [@gandamu](https://twitter.com/gandamu_ml)x, [@somnai_dreams](https://twitter.com/somnai_dreams), [Katherine Crowson](https://twitter.com/RiversHaveWings), [Adam Letts](https://twitter.com/gandamu_ml)",
            "description": "![A Wonderful landscape of pollinations in a beautiful flower fields, in a mystical flower field Ultra detailed, hyper realistic 4k by Albert Bierstadt and Greg rutkowski](https://i.imgur.com/H1F0gTN.png)\n\n\n\n*A Wonderful landscape of pollinations in a beautiful flower fields, in a mystical flower field Ultra detailed, hyper realistic 4k by Albert Bierstadt and Greg rutkowski*\n\n\n\nThis is the  current go-to model for turning text into images. It might take a few minutes, but it is very artistic\n\n\n\n---\n\nTutorial Video *by Greg Bechtel* :\n\n\n\n<iframe \n\n    src=\"https://www.youtube.com/embed/-aUNQO5pXe0\"     \n\n    frameborder=\"0\"\n\n    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n\n    allowfullscreen> </iframe>\n\n\n\nCredits: [@gandamu](https://twitter.com/gandamu_ml)x, [@somnai_dreams](https://twitter.com/somnai_dreams), [Katherine Crowson](https://twitter.com/RiversHaveWings), [Adam Letts](https://twitter.com/gandamu_ml)",
            "img": "https://i.imgur.com/H1F0gTN.png",
            "pollinator_group": [
                "T4"
            ]
        }
    },
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/dreamfields-torch": {
        "hash": "sha256:19b767a7206a3a204992c20420adc6a01024ba60e4d4d7427a0cb92de29886ad",
        "full_url": "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/dreamfields-torch@sha256:19b767a7206a3a204992c20420adc6a01024ba60e4d4d7427a0cb92de29886ad",
        "openapi": {
            "components": {
                "schemas": {
                    "HTTPValidationError": {
                        "properties": {
                            "detail": {
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail",
                                "type": "array"
                            }
                        },
                        "title": "HTTPValidationError",
                        "type": "object"
                    },
                    "Input": {
                        "properties": {
                            "H": {
                                "default": 800,
                                "description": "H",
                                "title": "H",
                                "type": "integer",
                                "x-order": 20
                            },
                            "W": {
                                "default": 800,
                                "description": "W",
                                "title": "W",
                                "type": "integer",
                                "x-order": 19
                            },
                            "aug_copy": {
                                "default": 8,
                                "description": "augmentation copy for each renderred image before feeding into CLIP",
                                "title": "Aug Copy",
                                "type": "integer",
                                "x-order": 16
                            },
                            "dir_text": {
                                "default": false,
                                "description": "direction encoded text prompt",
                                "title": "Dir Text",
                                "type": "boolean",
                                "x-order": 17
                            },
                            "dt_gamma": {
                                "default": 0,
                                "description": "dt_gamma (>=0) for adaptive ray marching. set to 0 to disable, >0 to accelerate rendering (but usually with worse quality)",
                                "title": "Dt Gamma",
                                "type": "number",
                                "x-order": 10
                            },
                            "fovy": {
                                "default": 90,
                                "description": "default GUI camera fovy",
                                "title": "Fovy",
                                "type": "number",
                                "x-order": 21
                            },
                            "fp16": {
                                "default": false,
                                "description": "use amp mixed precision training",
                                "title": "Fp16",
                                "type": "boolean",
                                "x-order": 9
                            },
                            "h": {
                                "default": 128,
                                "description": "render height for CLIP training (<=224)",
                                "title": "H",
                                "type": "integer",
                                "x-order": 12
                            },
                            "image": {
                                "description": "ref image prompt",
                                "format": "uri",
                                "title": "Image",
                                "type": "string",
                                "x-order": 1
                            },
                            "iters": {
                                "default": 3000,
                                "description": "training iters",
                                "title": "Iters",
                                "type": "integer",
                                "x-order": 3
                            },
                            "lr": {
                                "default": 0.0005,
                                "description": "initital learning rate",
                                "title": "Lr",
                                "type": "number",
                                "x-order": 4
                            },
                            "max_ray_batch": {
                                "default": 4096,
                                "description": "batch size of rays at inference to avoid OOM (only valid when not using --cuda_ray)",
                                "title": "Max Ray Batch",
                                "type": "integer",
                                "x-order": 8
                            },
                            "max_spp": {
                                "default": 64,
                                "description": "GUI rendering max sample per pixel",
                                "title": "Max Spp",
                                "type": "integer",
                                "x-order": 22
                            },
                            "num_rays": {
                                "default": 4096,
                                "description": "number of rays",
                                "title": "Num Rays",
                                "type": "integer",
                                "x-order": 5
                            },
                            "num_steps": {
                                "default": 512,
                                "description": "num steps sampled per ray (only valid when not using --cuda_ray)",
                                "title": "Num Steps",
                                "type": "integer",
                                "x-order": 6
                            },
                            "radius": {
                                "default": 3,
                                "description": "default GUI camera radius from center",
                                "title": "Radius",
                                "type": "number",
                                "x-order": 18
                            },
                            "seed": {
                                "default": 123,
                                "description": "random seed",
                                "title": "Seed",
                                "type": "integer",
                                "x-order": 2
                            },
                            "tau_0": {
                                "default": 0.5,
                                "description": "target mean transparency 0",
                                "title": "Tau 0",
                                "type": "number",
                                "x-order": 13
                            },
                            "tau_1": {
                                "default": 0.8,
                                "description": "target mean transparency 1",
                                "title": "Tau 1",
                                "type": "number",
                                "x-order": 14
                            },
                            "tau_step": {
                                "default": 500,
                                "description": "steps to anneal from tau_0 to tau_1",
                                "title": "Tau Step",
                                "type": "number",
                                "x-order": 15
                            },
                            "text": {
                                "description": "Text to render",
                                "title": "Text",
                                "type": "string",
                                "x-order": 0
                            },
                            "upsample_steps": {
                                "default": 0,
                                "description": "num steps up-sampled per ray (only valid when not using --cuda_ray)",
                                "title": "Upsample Steps",
                                "type": "integer",
                                "x-order": 7
                            },
                            "w": {
                                "default": 128,
                                "description": "render width for CLIP training (<=224)",
                                "title": "W",
                                "type": "integer",
                                "x-order": 11
                            }
                        },
                        "required": [
                            "text"
                        ],
                        "title": "Input",
                        "type": "object"
                    },
                    "Output": {
                        "format": "uri",
                        "title": "Output",
                        "type": "string"
                    },
                    "Request": {
                        "description": "The request body for a prediction",
                        "properties": {
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output_file_prefix": {
                                "title": "Output File Prefix",
                                "type": "string"
                            }
                        },
                        "title": "Request",
                        "type": "object"
                    },
                    "Response": {
                        "description": "The response body for a prediction",
                        "properties": {
                            "error": {
                                "title": "Error",
                                "type": "string"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            }
                        },
                        "required": [
                            "status"
                        ],
                        "title": "Response",
                        "type": "object"
                    },
                    "Status": {
                        "description": "An enumeration.",
                        "enum": [
                            "processing",
                            "succeeded",
                            "failed"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "ValidationError": {
                        "properties": {
                            "loc": {
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location",
                                "type": "array"
                            },
                            "msg": {
                                "title": "Message",
                                "type": "string"
                            },
                            "type": {
                                "title": "Error Type",
                                "type": "string"
                            }
                        },
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "title": "ValidationError",
                        "type": "object"
                    }
                }
            },
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "openapi": "3.0.2",
            "paths": {
                "/": {
                    "get": {
                        "operationId": "root__get",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {}
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "summary": "Root"
                    }
                },
                "/predictions": {
                    "post": {
                        "description": "Run a single prediction on the model",
                        "operationId": "predict_predictions_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Request"
                                    }
                                }
                            }
                        },
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Response"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "summary": "Predict"
                    }
                }
            }
        },
        "meta": {
            "url": "pollinations/dreamfields-torch",
            "key": "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/dreamfields-torch",
            "path": "dreamfields",
            "name": "Dreamfields",
            "description": "<img src=\"https://i.imgur.com/a9hByt4.png\" width=\"300\">\n\n\n\n Dreamfields is a deep neural network that can be used to predict the growth of your baby's weight. It is a powerful tool for predicting the future of your baby's weight.",
            "category": "0 Featured",
            "image": "https://i.imgur.com/a9hByt4.png",
            "pollinator_group": [
                "T4"
            ]
        }
    },
    "r8.im/afiaka87/retrieval-augmented-diffusion": {
        "hash": "sha256:c29e346c6c3d187d461ebbda9a060377ebb6563c082b7f40d2484544541ee089",
        "full_url": "r8.im/afiaka87/retrieval-augmented-diffusion@sha256:c29e346c6c3d187d461ebbda9a060377ebb6563c082b7f40d2484544541ee089",
        "openapi": {
            "components": {
                "schemas": {
                    "HTTPValidationError": {
                        "properties": {
                            "detail": {
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail",
                                "type": "array"
                            }
                        },
                        "title": "HTTPValidationError",
                        "type": "object"
                    },
                    "Input": {
                        "properties": {
                            "database_name": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/database_name"
                                    }
                                ],
                                "default": "laion-aesthetic",
                                "description": "Which database to use for the semantic search. Different databases have different capabilties.",
                                "x-order": 2
                            },
                            "height": {
                                "default": 768,
                                "description": "Desired height of generated images.",
                                "title": "Height",
                                "type": "integer",
                                "x-order": 5
                            },
                            "num_database_reuslts": {
                                "default": 10,
                                "description": "The number of search results to guide the generation with. Using more will 'broaden' capabilities of the model at the risk of causing mode collapse or artifacting.",
                                "maximum": 20,
                                "minimum": 1,
                                "title": "Num Database Reuslts",
                                "type": "integer",
                                "x-order": 3
                            },
                            "num_generations": {
                                "default": 4,
                                "description": "Number of images to generate. Using more will make generation take longer.",
                                "title": "Num Generations",
                                "type": "integer",
                                "x-order": 4
                            },
                            "prompt": {
                                "default": "",
                                "description": "model will try to generate this text.",
                                "title": "Prompt",
                                "type": "string",
                                "x-order": 0
                            },
                            "prompt_scale": {
                                "default": 5,
                                "description": "Determines influence of the prompt on the generated image. Going above 5.0 is likely to cause artifacting.",
                                "title": "Prompt Scale",
                                "type": "number",
                                "x-order": 1
                            },
                            "steps": {
                                "default": 50,
                                "description": "How many steps to run the model for. Using more will make generation take longer. 50 tends to work well.",
                                "title": "Steps",
                                "type": "integer",
                                "x-order": 7
                            },
                            "width": {
                                "default": 768,
                                "description": "Desired width of generated images.",
                                "title": "Width",
                                "type": "integer",
                                "x-order": 6
                            }
                        },
                        "title": "Input",
                        "type": "object"
                    },
                    "Output": {
                        "items": {
                            "format": "uri",
                            "type": "string"
                        },
                        "title": "Output",
                        "type": "array"
                    },
                    "Request": {
                        "description": "The request body for a prediction",
                        "properties": {
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output_file_prefix": {
                                "title": "Output File Prefix",
                                "type": "string"
                            }
                        },
                        "title": "Request",
                        "type": "object"
                    },
                    "Response": {
                        "description": "The response body for a prediction",
                        "properties": {
                            "error": {
                                "title": "Error",
                                "type": "string"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            }
                        },
                        "required": [
                            "status"
                        ],
                        "title": "Response",
                        "type": "object"
                    },
                    "Status": {
                        "description": "An enumeration.",
                        "enum": [
                            "processing",
                            "succeeded",
                            "failed"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "ValidationError": {
                        "properties": {
                            "loc": {
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location",
                                "type": "array"
                            },
                            "msg": {
                                "title": "Message",
                                "type": "string"
                            },
                            "type": {
                                "title": "Error Type",
                                "type": "string"
                            }
                        },
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "title": "ValidationError",
                        "type": "object"
                    },
                    "database_name": {
                        "description": "An enumeration.",
                        "enum": [
                            "laion-aesthetic",
                            "simulacra",
                            "prompt-engineer",
                            "pokemon"
                        ],
                        "title": "database_name",
                        "type": "string"
                    }
                }
            },
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "openapi": "3.0.2",
            "paths": {
                "/": {
                    "get": {
                        "operationId": "root__get",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {}
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "summary": "Root"
                    }
                },
                "/predictions": {
                    "post": {
                        "description": "Run a single prediction on the model",
                        "operationId": "predict_predictions_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Request"
                                    }
                                }
                            }
                        },
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/Response"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "summary": "Predict"
                    }
                }
            }
        },
        "meta": {
            "pollinator_group": [
                "T4"
            ]
        }
    }
}