{
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/preset-envisioning": {
        "components": {
            "schemas": {
                "HTTPValidationError": {
                    "properties": {
                        "detail": {
                            "items": {
                                "$ref": "#/components/schemas/ValidationError"
                            },
                            "title": "Detail",
                            "type": "array"
                        }
                    },
                    "title": "HTTPValidationError",
                    "type": "object"
                },
                "Input": {
                    "properties": {
                        "Diversity_scale": {
                            "default": 10,
                            "description": "As a rule of thumb, higher values of scale produce better samples at the cost of a reduced output diversity.",
                            "title": "Diversity Scale",
                            "type": "number",
                            "x-order": 4
                        },
                        "ETA": {
                            "default": 1,
                            "description": "Can be 0 or 1",
                            "title": "Eta",
                            "type": "integer",
                            "x-order": 2
                        },
                        "Height": {
                            "default": 256,
                            "description": "Height",
                            "title": "Height",
                            "type": "integer",
                            "x-order": 6
                        },
                        "Prompt": {
                            "default": "",
                            "description": "Your text prompt.",
                            "title": "Prompt",
                            "type": "string",
                            "x-order": 0
                        },
                        "Samples_in_parallel": {
                            "default": 4,
                            "description": "Batch size",
                            "title": "Samples In Parallel",
                            "type": "integer",
                            "x-order": 3
                        },
                        "Steps": {
                            "default": 100,
                            "description": "Number of steps to run the model",
                            "title": "Steps",
                            "type": "integer",
                            "x-order": 1
                        },
                        "Width": {
                            "default": 256,
                            "description": "Width",
                            "title": "Width",
                            "type": "integer",
                            "x-order": 5
                        }
                    },
                    "title": "Input",
                    "type": "object"
                },
                "Output": {
                    "title": "Output",
                    "type": "null"
                },
                "Request": {
                    "description": "The request body for a prediction",
                    "properties": {
                        "input": {
                            "$ref": "#/components/schemas/Input"
                        },
                        "output_file_prefix": {
                            "title": "Output File Prefix",
                            "type": "string"
                        }
                    },
                    "title": "Request",
                    "type": "object"
                },
                "Response": {
                    "description": "The response body for a prediction",
                    "properties": {
                        "error": {
                            "title": "Error",
                            "type": "string"
                        },
                        "output": {
                            "$ref": "#/components/schemas/Output"
                        },
                        "status": {
                            "$ref": "#/components/schemas/Status"
                        }
                    },
                    "required": [
                        "status"
                    ],
                    "title": "Response",
                    "type": "object"
                },
                "Status": {
                    "description": "An enumeration.",
                    "enum": [
                        "processing",
                        "succeeded",
                        "failed"
                    ],
                    "title": "Status",
                    "type": "string"
                },
                "ValidationError": {
                    "properties": {
                        "loc": {
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "integer"
                                    }
                                ]
                            },
                            "title": "Location",
                            "type": "array"
                        },
                        "msg": {
                            "title": "Message",
                            "type": "string"
                        },
                        "type": {
                            "title": "Error Type",
                            "type": "string"
                        }
                    },
                    "required": [
                        "loc",
                        "msg",
                        "type"
                    ],
                    "title": "ValidationError",
                    "type": "object"
                }
            }
        },
        "info": {
            "title": "Cog",
            "version": "0.1.0"
        },
        "openapi": "3.0.2",
        "paths": {
            "/": {
                "get": {
                    "operationId": "root__get",
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {}
                                }
                            },
                            "description": "Successful Response"
                        }
                    },
                    "summary": "Root"
                }
            },
            "/predictions": {
                "post": {
                    "description": "Run a single prediction on the model",
                    "operationId": "predict_predictions_post",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response"
                                    }
                                }
                            },
                            "description": "Successful Response"
                        },
                        "422": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                }
                            },
                            "description": "Validation Error"
                        }
                    },
                    "summary": "Predict"
                }
            }
        }
    },
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/voodoohop/dalle-playground": {
        "components": {
            "schemas": {
                "HTTPValidationError": {
                    "properties": {
                        "detail": {
                            "items": {
                                "$ref": "#/components/schemas/ValidationError"
                            },
                            "title": "Detail",
                            "type": "array"
                        }
                    },
                    "title": "HTTPValidationError",
                    "type": "object"
                },
                "Input": {
                    "properties": {
                        "model_size": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/model_size"
                                }
                            ],
                            "default": "MEGA",
                            "description": "Size of the model",
                            "x-order": 2
                        },
                        "num": {
                            "default": 4,
                            "description": "Number of images to generate",
                            "maximum": 20,
                            "minimum": 1,
                            "title": "Num",
                            "type": "integer",
                            "x-order": 1
                        },
                        "prompt": {
                            "description": "Image prompt",
                            "title": "Prompt",
                            "type": "string",
                            "x-order": 0
                        }
                    },
                    "required": [
                        "prompt"
                    ],
                    "title": "Input",
                    "type": "object"
                },
                "Output": {
                    "items": {
                        "format": "uri",
                        "type": "string"
                    },
                    "title": "Output",
                    "type": "array"
                },
                "Request": {
                    "description": "The request body for a prediction",
                    "properties": {
                        "input": {
                            "$ref": "#/components/schemas/Input"
                        },
                        "output_file_prefix": {
                            "title": "Output File Prefix",
                            "type": "string"
                        }
                    },
                    "title": "Request",
                    "type": "object"
                },
                "Response": {
                    "description": "The response body for a prediction",
                    "properties": {
                        "error": {
                            "title": "Error",
                            "type": "string"
                        },
                        "output": {
                            "$ref": "#/components/schemas/Output"
                        },
                        "status": {
                            "$ref": "#/components/schemas/Status"
                        }
                    },
                    "required": [
                        "status"
                    ],
                    "title": "Response",
                    "type": "object"
                },
                "Status": {
                    "description": "An enumeration.",
                    "enum": [
                        "processing",
                        "succeeded",
                        "failed"
                    ],
                    "title": "Status",
                    "type": "string"
                },
                "ValidationError": {
                    "properties": {
                        "loc": {
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "integer"
                                    }
                                ]
                            },
                            "title": "Location",
                            "type": "array"
                        },
                        "msg": {
                            "title": "Message",
                            "type": "string"
                        },
                        "type": {
                            "title": "Error Type",
                            "type": "string"
                        }
                    },
                    "required": [
                        "loc",
                        "msg",
                        "type"
                    ],
                    "title": "ValidationError",
                    "type": "object"
                },
                "model_size": {
                    "description": "An enumeration.",
                    "enum": [
                        "MEGA"
                    ],
                    "title": "model_size",
                    "type": "string"
                }
            }
        },
        "info": {
            "title": "Cog",
            "version": "0.1.0"
        },
        "openapi": "3.0.2",
        "paths": {
            "/": {
                "get": {
                    "operationId": "root__get",
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {}
                                }
                            },
                            "description": "Successful Response"
                        }
                    },
                    "summary": "Root"
                }
            },
            "/predictions": {
                "post": {
                    "description": "Run a single prediction on the model",
                    "operationId": "predict_predictions_post",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response"
                                    }
                                }
                            },
                            "description": "Successful Response"
                        },
                        "422": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                }
                            },
                            "description": "Validation Error"
                        }
                    },
                    "summary": "Predict"
                }
            }
        }
    },
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/latent-diffusion-400m": {
        "components": {
            "schemas": {
                "HTTPValidationError": {
                    "properties": {
                        "detail": {
                            "items": {
                                "$ref": "#/components/schemas/ValidationError"
                            },
                            "title": "Detail",
                            "type": "array"
                        }
                    },
                    "title": "HTTPValidationError",
                    "type": "object"
                },
                "Input": {
                    "properties": {
                        "Diversity_scale": {
                            "default": 10,
                            "description": "As a rule of thumb, higher values of scale produce better samples at the cost of a reduced output diversity.",
                            "title": "Diversity Scale",
                            "type": "number",
                            "x-order": 4
                        },
                        "ETA": {
                            "default": 1,
                            "description": "Can be 0 or 1",
                            "title": "Eta",
                            "type": "integer",
                            "x-order": 2
                        },
                        "Height": {
                            "default": 256,
                            "description": "Height",
                            "title": "Height",
                            "type": "integer",
                            "x-order": 6
                        },
                        "Prompt": {
                            "default": "",
                            "description": "Your text prompt.",
                            "title": "Prompt",
                            "type": "string",
                            "x-order": 0
                        },
                        "Samples_in_parallel": {
                            "default": 4,
                            "description": "Batch size",
                            "title": "Samples In Parallel",
                            "type": "integer",
                            "x-order": 3
                        },
                        "Steps": {
                            "default": 100,
                            "description": "Number of steps to run the model",
                            "title": "Steps",
                            "type": "integer",
                            "x-order": 1
                        },
                        "Width": {
                            "default": 256,
                            "description": "Width",
                            "title": "Width",
                            "type": "integer",
                            "x-order": 5
                        }
                    },
                    "title": "Input",
                    "type": "object"
                },
                "Output": {
                    "title": "Output",
                    "type": "null"
                },
                "Request": {
                    "description": "The request body for a prediction",
                    "properties": {
                        "input": {
                            "$ref": "#/components/schemas/Input"
                        },
                        "output_file_prefix": {
                            "title": "Output File Prefix",
                            "type": "string"
                        }
                    },
                    "title": "Request",
                    "type": "object"
                },
                "Response": {
                    "description": "The response body for a prediction",
                    "properties": {
                        "error": {
                            "title": "Error",
                            "type": "string"
                        },
                        "output": {
                            "$ref": "#/components/schemas/Output"
                        },
                        "status": {
                            "$ref": "#/components/schemas/Status"
                        }
                    },
                    "required": [
                        "status"
                    ],
                    "title": "Response",
                    "type": "object"
                },
                "Status": {
                    "description": "An enumeration.",
                    "enum": [
                        "processing",
                        "succeeded",
                        "failed"
                    ],
                    "title": "Status",
                    "type": "string"
                },
                "ValidationError": {
                    "properties": {
                        "loc": {
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "integer"
                                    }
                                ]
                            },
                            "title": "Location",
                            "type": "array"
                        },
                        "msg": {
                            "title": "Message",
                            "type": "string"
                        },
                        "type": {
                            "title": "Error Type",
                            "type": "string"
                        }
                    },
                    "required": [
                        "loc",
                        "msg",
                        "type"
                    ],
                    "title": "ValidationError",
                    "type": "object"
                }
            }
        },
        "info": {
            "title": "Cog",
            "version": "0.1.0"
        },
        "openapi": "3.0.2",
        "paths": {
            "/": {
                "get": {
                    "operationId": "root__get",
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {}
                                }
                            },
                            "description": "Successful Response"
                        }
                    },
                    "summary": "Root"
                }
            },
            "/predictions": {
                "post": {
                    "description": "Run a single prediction on the model",
                    "operationId": "predict_predictions_post",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response"
                                    }
                                }
                            },
                            "description": "Successful Response"
                        },
                        "422": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                }
                            },
                            "description": "Validation Error"
                        }
                    },
                    "summary": "Predict"
                }
            }
        }
    },
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/min-dalle": {
        "components": {
            "schemas": {
                "HTTPValidationError": {
                    "properties": {
                        "detail": {
                            "items": {
                                "$ref": "#/components/schemas/ValidationError"
                            },
                            "title": "Detail",
                            "type": "array"
                        }
                    },
                    "title": "HTTPValidationError",
                    "type": "object"
                },
                "Input": {
                    "properties": {
                        "Prompt": {
                            "default": "Dali painting of WALL\u00b7E",
                            "description": "For long prompts, only the first 64 tokens will be used to generate the image.",
                            "title": "Prompt",
                            "type": "string",
                            "x-order": 0
                        },
                        "grid_size": {
                            "default": 1,
                            "description": "Size of the image grid.  4x4 takes about 15 seconds, 8x8 takes about 35 seconds",
                            "maximum": 8,
                            "minimum": 1,
                            "title": "Grid Size",
                            "type": "integer",
                            "x-order": 2
                        },
                        "intermediate_outputs": {
                            "default": true,
                            "description": "Whether to show intermediate outputs while running.  This adds less than a second to the run time.",
                            "title": "Intermediate Outputs",
                            "type": "boolean",
                            "x-order": 1
                        },
                        "log2_supercondition_factor": {
                            "default": 4,
                            "description": "Higher values result in better agreement with the text but a narrower variety of generated images",
                            "maximum": 6,
                            "minimum": 1,
                            "title": "Log2 Supercondition Factor",
                            "type": "integer",
                            "x-order": 3
                        }
                    },
                    "title": "Input",
                    "type": "object"
                },
                "Output": {
                    "items": {
                        "format": "uri",
                        "type": "string"
                    },
                    "title": "Output",
                    "type": "array",
                    "x-cog-array-type": "iterator"
                },
                "Request": {
                    "description": "The request body for a prediction",
                    "properties": {
                        "input": {
                            "$ref": "#/components/schemas/Input"
                        },
                        "output_file_prefix": {
                            "title": "Output File Prefix",
                            "type": "string"
                        }
                    },
                    "title": "Request",
                    "type": "object"
                },
                "Response": {
                    "description": "The response body for a prediction",
                    "properties": {
                        "error": {
                            "title": "Error",
                            "type": "string"
                        },
                        "output": {
                            "$ref": "#/components/schemas/Output"
                        },
                        "status": {
                            "$ref": "#/components/schemas/Status"
                        }
                    },
                    "required": [
                        "status"
                    ],
                    "title": "Response",
                    "type": "object"
                },
                "Status": {
                    "description": "An enumeration.",
                    "enum": [
                        "processing",
                        "succeeded",
                        "failed"
                    ],
                    "title": "Status",
                    "type": "string"
                },
                "ValidationError": {
                    "properties": {
                        "loc": {
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "integer"
                                    }
                                ]
                            },
                            "title": "Location",
                            "type": "array"
                        },
                        "msg": {
                            "title": "Message",
                            "type": "string"
                        },
                        "type": {
                            "title": "Error Type",
                            "type": "string"
                        }
                    },
                    "required": [
                        "loc",
                        "msg",
                        "type"
                    ],
                    "title": "ValidationError",
                    "type": "object"
                }
            }
        },
        "info": {
            "title": "Cog",
            "version": "0.1.0"
        },
        "openapi": "3.0.2",
        "paths": {
            "/": {
                "get": {
                    "operationId": "root__get",
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {}
                                }
                            },
                            "description": "Successful Response"
                        }
                    },
                    "summary": "Root"
                }
            },
            "/predictions": {
                "post": {
                    "description": "Run a single prediction on the model",
                    "operationId": "predict_predictions_post",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response"
                                    }
                                }
                            },
                            "description": "Successful Response"
                        },
                        "422": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                }
                            },
                            "description": "Validation Error"
                        }
                    },
                    "summary": "Predict"
                }
            }
        }
    },
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/preset-frontpage": {
        "components": {
            "schemas": {
                "HTTPValidationError": {
                    "properties": {
                        "detail": {
                            "items": {
                                "$ref": "#/components/schemas/ValidationError"
                            },
                            "title": "Detail",
                            "type": "array"
                        }
                    },
                    "title": "HTTPValidationError",
                    "type": "object"
                },
                "Input": {
                    "properties": {
                        "Diversity_scale": {
                            "default": 10,
                            "description": "As a rule of thumb, higher values of scale produce better samples at the cost of a reduced output diversity.",
                            "title": "Diversity Scale",
                            "type": "number",
                            "x-order": 4
                        },
                        "ETA": {
                            "default": 1,
                            "description": "Can be 0 or 1",
                            "title": "Eta",
                            "type": "integer",
                            "x-order": 2
                        },
                        "Height": {
                            "default": 256,
                            "description": "Height",
                            "title": "Height",
                            "type": "integer",
                            "x-order": 6
                        },
                        "Prompt": {
                            "default": "",
                            "description": "Your text prompt.",
                            "title": "Prompt",
                            "type": "string",
                            "x-order": 0
                        },
                        "Samples_in_parallel": {
                            "default": 3,
                            "description": "Batch size",
                            "title": "Samples In Parallel",
                            "type": "integer",
                            "x-order": 3
                        },
                        "Steps": {
                            "default": 100,
                            "description": "Number of steps to run the model",
                            "title": "Steps",
                            "type": "integer",
                            "x-order": 1
                        },
                        "Width": {
                            "default": 256,
                            "description": "Width",
                            "title": "Width",
                            "type": "integer",
                            "x-order": 5
                        }
                    },
                    "title": "Input",
                    "type": "object"
                },
                "Output": {
                    "title": "Output",
                    "type": "null"
                },
                "Request": {
                    "description": "The request body for a prediction",
                    "properties": {
                        "input": {
                            "$ref": "#/components/schemas/Input"
                        },
                        "output_file_prefix": {
                            "title": "Output File Prefix",
                            "type": "string"
                        }
                    },
                    "title": "Request",
                    "type": "object"
                },
                "Response": {
                    "description": "The response body for a prediction",
                    "properties": {
                        "error": {
                            "title": "Error",
                            "type": "string"
                        },
                        "output": {
                            "$ref": "#/components/schemas/Output"
                        },
                        "status": {
                            "$ref": "#/components/schemas/Status"
                        }
                    },
                    "required": [
                        "status"
                    ],
                    "title": "Response",
                    "type": "object"
                },
                "Status": {
                    "description": "An enumeration.",
                    "enum": [
                        "processing",
                        "succeeded",
                        "failed"
                    ],
                    "title": "Status",
                    "type": "string"
                },
                "ValidationError": {
                    "properties": {
                        "loc": {
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "integer"
                                    }
                                ]
                            },
                            "title": "Location",
                            "type": "array"
                        },
                        "msg": {
                            "title": "Message",
                            "type": "string"
                        },
                        "type": {
                            "title": "Error Type",
                            "type": "string"
                        }
                    },
                    "required": [
                        "loc",
                        "msg",
                        "type"
                    ],
                    "title": "ValidationError",
                    "type": "object"
                }
            }
        },
        "info": {
            "title": "Cog",
            "version": "0.1.0"
        },
        "openapi": "3.0.2",
        "paths": {
            "/": {
                "get": {
                    "operationId": "root__get",
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {}
                                }
                            },
                            "description": "Successful Response"
                        }
                    },
                    "summary": "Root"
                }
            },
            "/predictions": {
                "post": {
                    "description": "Run a single prediction on the model",
                    "operationId": "predict_predictions_post",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response"
                                    }
                                }
                            },
                            "description": "Successful Response"
                        },
                        "422": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                }
                            },
                            "description": "Validation Error"
                        }
                    },
                    "summary": "Predict"
                }
            }
        }
    },
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/majesty-diffusion-cog": {
        "components": {
            "schemas": {
                "HTTPValidationError": {
                    "properties": {
                        "detail": {
                            "items": {
                                "$ref": "#/components/schemas/ValidationError"
                            },
                            "title": "Detail",
                            "type": "array"
                        }
                    },
                    "title": "HTTPValidationError",
                    "type": "object"
                },
                "Input": {
                    "properties": {
                        "Prompt": {
                            "default": "",
                            "description": "Your text prompt.",
                            "title": "Prompt",
                            "type": "string",
                            "x-order": 0
                        },
                        "latent_diffusion_guidance_scale": {
                            "default": 12,
                            "description": "Balance between creativity and coherent composition. Try values between 0-15. Lower values help with text interpretation and creativity, higher help with composition. ",
                            "title": "Latent Diffusion Guidance Scale",
                            "type": "integer",
                            "x-order": 2
                        },
                        "latent_diffusion_model": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/latent_diffusion_model"
                                }
                            ],
                            "default": "finetuned",
                            "description": "Original is the previous LAION model. Finetuned should be better but cannot do text. One of:  [\"original\", \"finetuned\", \"ongo (fine tuned in paintings)\", \"erlich (fine tuned in logos)\"]",
                            "x-order": 1
                        }
                    },
                    "title": "Input",
                    "type": "object"
                },
                "Output": {
                    "title": "Output",
                    "type": "null"
                },
                "Request": {
                    "description": "The request body for a prediction",
                    "properties": {
                        "input": {
                            "$ref": "#/components/schemas/Input"
                        },
                        "output_file_prefix": {
                            "title": "Output File Prefix",
                            "type": "string"
                        }
                    },
                    "title": "Request",
                    "type": "object"
                },
                "Response": {
                    "description": "The response body for a prediction",
                    "properties": {
                        "error": {
                            "title": "Error",
                            "type": "string"
                        },
                        "output": {
                            "$ref": "#/components/schemas/Output"
                        },
                        "status": {
                            "$ref": "#/components/schemas/Status"
                        }
                    },
                    "required": [
                        "status"
                    ],
                    "title": "Response",
                    "type": "object"
                },
                "Status": {
                    "description": "An enumeration.",
                    "enum": [
                        "processing",
                        "succeeded",
                        "failed"
                    ],
                    "title": "Status",
                    "type": "string"
                },
                "ValidationError": {
                    "properties": {
                        "loc": {
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "integer"
                                    }
                                ]
                            },
                            "title": "Location",
                            "type": "array"
                        },
                        "msg": {
                            "title": "Message",
                            "type": "string"
                        },
                        "type": {
                            "title": "Error Type",
                            "type": "string"
                        }
                    },
                    "required": [
                        "loc",
                        "msg",
                        "type"
                    ],
                    "title": "ValidationError",
                    "type": "object"
                },
                "latent_diffusion_model": {
                    "description": "An enumeration.",
                    "enum": [
                        "original",
                        "finetuned",
                        "ongo (fine tuned in paintings)",
                        "erlich (fine tuned in logos)"
                    ],
                    "title": "latent_diffusion_model",
                    "type": "string"
                }
            }
        },
        "info": {
            "title": "Cog",
            "version": "0.1.0"
        },
        "openapi": "3.0.2",
        "paths": {
            "/": {
                "get": {
                    "operationId": "root__get",
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {}
                                }
                            },
                            "description": "Successful Response"
                        }
                    },
                    "summary": "Root"
                }
            },
            "/predictions": {
                "post": {
                    "description": "Run a single prediction on the model",
                    "operationId": "predict_predictions_post",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response"
                                    }
                                }
                            },
                            "description": "Successful Response"
                        },
                        "422": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                }
                            },
                            "description": "Validation Error"
                        }
                    },
                    "summary": "Predict"
                }
            }
        }
    },
    "r8.im/jingyunliang/swinir@sha256:9d91795e944f3a585fa83f749617fc75821bea8b323348f39cf84f8fd0cbc2f7": {
        "components": {
            "schemas": {
                "Input": {
                    "type": "object",
                    "properties": {
                        "image": {
                            "type": "string",
                            "format": "uri",
                            "description": "input image",
                            "x-order": 0
                        },
                        "task_type": {
                            "type": "string",
                            "description": "image restoration task type",
                            "default": "Real-World Image Super-Resolution-Large",
                            "enum": [
                                "Real-World Image Super-Resolution-Large",
                                "Real-World Image Super-Resolution-Medium",
                                "Grayscale Image Denoising",
                                "Color Image Denoising",
                                "JPEG Compression Artifact Reduction"
                            ],
                            "x-order": 1
                        },
                        "noise": {
                            "type": "integer",
                            "description": "noise level, activated for Grayscale Image Denoising and Color Image Denoising. Leave it as default or arbitrary if other tasks are selected",
                            "default": 15,
                            "enum": [
                                "15",
                                "25",
                                "50"
                            ],
                            "x-order": 2
                        },
                        "jpeg": {
                            "type": "integer",
                            "description": "scale factor, activated for JPEG Compression Artifact Reduction. Leave it as default or arbitrary if other tasks are selected",
                            "default": 40,
                            "enum": [
                                "10",
                                "20",
                                "30",
                                "40"
                            ],
                            "x-order": 3
                        }
                    }
                },
                "Output": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "file": {
                                "type": "string",
                                "format": "uri",
                                "x-order": 0
                            },
                            "text": {
                                "type": "string",
                                "x-order": 1
                            }
                        }
                    }
                }
            }
        }
    },
    "r8.im/nightmareai/disco-diffusion@sha256:cc730cf65f83d7ffed2aa6d47bc9a538b628617be5a4c2db27e7aee6a6391920": {
        "components": {
            "schemas": {
                "HTTPValidationError": {
                    "properties": {
                        "detail": {
                            "items": {
                                "$ref": "#/components/schemas/ValidationError"
                            },
                            "title": "Detail",
                            "type": "array"
                        }
                    },
                    "title": "HTTPValidationError",
                    "type": "object"
                },
                "Input": {
                    "properties": {
                        "RN101": {
                            "default": false,
                            "description": "Use RN101 model",
                            "title": "Rn101",
                            "type": "boolean",
                            "x-order": 15
                        },
                        "RN101_quickgelu_yfcc15m": {
                            "default": false,
                            "description": "Use RN101_quickgelu_yfcc15m model",
                            "title": "Rn101 Quickgelu Yfcc15M",
                            "type": "boolean",
                            "x-order": 28
                        },
                        "RN101_yfcc15m": {
                            "default": false,
                            "description": "Use RN101_yfcc15m model",
                            "title": "Rn101 Yfcc15M",
                            "type": "boolean",
                            "x-order": 27
                        },
                        "RN50": {
                            "default": true,
                            "description": "Use RN50 model",
                            "title": "Rn50",
                            "type": "boolean",
                            "x-order": 10
                        },
                        "RN50_cc12m": {
                            "default": false,
                            "description": "Use RN50_cc12m model",
                            "title": "Rn50 Cc12M",
                            "type": "boolean",
                            "x-order": 24
                        },
                        "RN50_quickgelu_cc12m": {
                            "default": false,
                            "description": "Use RN50_quickgelu_cc12m model",
                            "title": "Rn50 Quickgelu Cc12M",
                            "type": "boolean",
                            "x-order": 26
                        },
                        "RN50_quickgelu_yfcc15m": {
                            "default": false,
                            "description": "Use RN50_quickgelu_yfcc15m model",
                            "title": "Rn50 Quickgelu Yfcc15M",
                            "type": "boolean",
                            "x-order": 25
                        },
                        "RN50_yffcc15m": {
                            "default": false,
                            "description": "Use RN50_yffcc15m model",
                            "title": "Rn50 Yffcc15M",
                            "type": "boolean",
                            "x-order": 23
                        },
                        "RN50x101": {
                            "default": false,
                            "description": "Use RN50x101 model",
                            "title": "Rn50X101",
                            "type": "boolean",
                            "x-order": 14
                        },
                        "RN50x16": {
                            "default": false,
                            "description": "Use RN50x16 model",
                            "title": "Rn50X16",
                            "type": "boolean",
                            "x-order": 12
                        },
                        "RN50x4": {
                            "default": false,
                            "description": "Use RN50x4 model",
                            "title": "Rn50X4",
                            "type": "boolean",
                            "x-order": 11
                        },
                        "RN50x64": {
                            "default": false,
                            "description": "Use RN50x64 model",
                            "title": "Rn50X64",
                            "type": "boolean",
                            "x-order": 13
                        },
                        "ViTB16": {
                            "default": true,
                            "description": "Use ViTB16 model",
                            "title": "Vitb16",
                            "type": "boolean",
                            "x-order": 7
                        },
                        "ViTB16_laion400m_e31": {
                            "default": false,
                            "description": "Use ViTB16_laion400m_e31 model",
                            "title": "Vitb16 Laion400M E31",
                            "type": "boolean",
                            "x-order": 21
                        },
                        "ViTB16_laion400m_e32": {
                            "default": false,
                            "description": "Use ViTB16_laion400m_e32 model",
                            "title": "Vitb16 Laion400M E32",
                            "type": "boolean",
                            "x-order": 22
                        },
                        "ViTB32": {
                            "default": true,
                            "description": "Use ViTB32 model",
                            "title": "Vitb32",
                            "type": "boolean",
                            "x-order": 6
                        },
                        "ViTB32_laion2b_e16": {
                            "default": false,
                            "description": "Use ViTB32_laion2b_e16 model",
                            "title": "Vitb32 Laion2B E16",
                            "type": "boolean",
                            "x-order": 16
                        },
                        "ViTB32_laion400m_e31": {
                            "default": false,
                            "description": "Use ViTB32_laion400m_e31 model",
                            "title": "Vitb32 Laion400M E31",
                            "type": "boolean",
                            "x-order": 17
                        },
                        "ViTB32_laion400m_e32": {
                            "default": false,
                            "description": "Use ViTB32_laion400m_e32 model",
                            "title": "Vitb32 Laion400M E32",
                            "type": "boolean",
                            "x-order": 18
                        },
                        "ViTB32quickgelu_laion400m_e31": {
                            "default": false,
                            "description": "Use ViTB32quickgelu_laion400m_e31 model",
                            "title": "Vitb32Quickgelu Laion400M E31",
                            "type": "boolean",
                            "x-order": 19
                        },
                        "ViTB32quickgelu_laion400m_e32": {
                            "default": false,
                            "description": "Use ViTB32quickgelu_laion400m_e32 model",
                            "title": "Vitb32Quickgelu Laion400M E32",
                            "type": "boolean",
                            "x-order": 20
                        },
                        "ViTL14": {
                            "default": false,
                            "description": "Use ViTB14 model",
                            "title": "Vitl14",
                            "type": "boolean",
                            "x-order": 8
                        },
                        "ViTL14_336": {
                            "default": false,
                            "description": "Use ViTL14_336 model",
                            "title": "Vitl14 336",
                            "type": "boolean",
                            "x-order": 9
                        },
                        "clip_guidance_scale": {
                            "default": 5000,
                            "description": "CLIP Guidance Scale",
                            "title": "Clip Guidance Scale",
                            "type": "integer",
                            "x-order": 30
                        },
                        "cutn_batches": {
                            "default": 4,
                            "description": "Cut Batches",
                            "title": "Cutn Batches",
                            "type": "integer",
                            "x-order": 34
                        },
                        "diffusion_model": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/diffusion_model"
                                }
                            ],
                            "default": "512x512_diffusion_uncond_finetune_008100",
                            "description": "Diffusion Model",
                            "x-order": 4
                        },
                        "diffusion_sampling_mode": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/diffusion_sampling_mode"
                                }
                            ],
                            "default": "ddim",
                            "description": "Diffusion Sampling Mode",
                            "x-order": 5
                        },
                        "display_rate": {
                            "default": 20,
                            "description": "Steps between outputs, lower numbers may slow down generation.",
                            "title": "Display Rate",
                            "type": "integer",
                            "x-order": 41
                        },
                        "height": {
                            "default": 768,
                            "description": "Height of the output image, higher numbers will take longer",
                            "title": "Height",
                            "type": "integer",
                            "x-order": 3
                        },
                        "init_image": {
                            "description": "Initial image to start generation from",
                            "format": "uri",
                            "title": "Init Image",
                            "type": "string",
                            "x-order": 36
                        },
                        "init_scale": {
                            "default": 1000,
                            "description": "Initial Scale",
                            "title": "Init Scale",
                            "type": "integer",
                            "x-order": 38
                        },
                        "prompt": {
                            "default": "A beautiful painting of a singular lighthouse, shining its light across a tumultuous sea of blood by greg rutkowski and thomas kinkade, Trending on artstation.",
                            "description": "Text Prompt",
                            "title": "Prompt",
                            "type": "string",
                            "x-order": 1
                        },
                        "range_scale": {
                            "default": 150,
                            "description": "Range Scale",
                            "title": "Range Scale",
                            "type": "integer",
                            "x-order": 32
                        },
                        "sat_scale": {
                            "default": 0,
                            "description": "Saturation Scale",
                            "title": "Sat Scale",
                            "type": "integer",
                            "x-order": 33
                        },
                        "seed": {
                            "description": "Seed (leave empty to use a random seed)",
                            "maximum": 4294967295,
                            "minimum": 0,
                            "title": "Seed",
                            "type": "integer",
                            "x-order": 42
                        },
                        "skip_augs": {
                            "default": false,
                            "description": "Skip Augmentations",
                            "title": "Skip Augs",
                            "type": "boolean",
                            "x-order": 35
                        },
                        "skip_steps": {
                            "default": 10,
                            "description": "Skip Steps",
                            "title": "Skip Steps",
                            "type": "integer",
                            "x-order": 40
                        },
                        "steps": {
                            "default": 100,
                            "description": "Number of steps, higher numbers will give more refined output but will take longer",
                            "maximum": 1000,
                            "minimum": 1,
                            "title": "Steps",
                            "type": "integer",
                            "x-order": 0
                        },
                        "target_image": {
                            "description": "Target image to generate towards, similarly to the text prompt",
                            "format": "uri",
                            "title": "Target Image",
                            "type": "string",
                            "x-order": 37
                        },
                        "target_scale": {
                            "default": 20000,
                            "description": "Target Scale",
                            "title": "Target Scale",
                            "type": "integer",
                            "x-order": 39
                        },
                        "tv_scale": {
                            "default": 0,
                            "description": "TV Scale",
                            "title": "Tv Scale",
                            "type": "integer",
                            "x-order": 31
                        },
                        "use_secondary_model": {
                            "default": true,
                            "description": "Use secondary model",
                            "title": "Use Secondary Model",
                            "type": "boolean",
                            "x-order": 29
                        },
                        "width": {
                            "default": 1280,
                            "description": "Width of the output image, higher numbers will take longer",
                            "title": "Width",
                            "type": "integer",
                            "x-order": 2
                        }
                    },
                    "title": "Input",
                    "type": "object"
                },
                "Output": {
                    "items": {
                        "format": "uri",
                        "type": "string"
                    },
                    "title": "Output",
                    "type": "array",
                    "x-cog-array-type": "iterator"
                },
                "Request": {
                    "description": "The request body for a prediction",
                    "properties": {
                        "input": {
                            "$ref": "#/components/schemas/Input"
                        },
                        "output_file_prefix": {
                            "title": "Output File Prefix",
                            "type": "string"
                        }
                    },
                    "title": "Request",
                    "type": "object"
                },
                "Response": {
                    "description": "The response body for a prediction",
                    "properties": {
                        "error": {
                            "title": "Error",
                            "type": "string"
                        },
                        "output": {
                            "$ref": "#/components/schemas/Output"
                        },
                        "status": {
                            "$ref": "#/components/schemas/Status"
                        }
                    },
                    "required": [
                        "status"
                    ],
                    "title": "Response",
                    "type": "object"
                },
                "Status": {
                    "description": "An enumeration.",
                    "enum": [
                        "processing",
                        "succeeded",
                        "failed"
                    ],
                    "title": "Status",
                    "type": "string"
                },
                "ValidationError": {
                    "properties": {
                        "loc": {
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "integer"
                                    }
                                ]
                            },
                            "title": "Location",
                            "type": "array"
                        },
                        "msg": {
                            "title": "Message",
                            "type": "string"
                        },
                        "type": {
                            "title": "Error Type",
                            "type": "string"
                        }
                    },
                    "required": [
                        "loc",
                        "msg",
                        "type"
                    ],
                    "title": "ValidationError",
                    "type": "object"
                },
                "diffusion_model": {
                    "description": "An enumeration.",
                    "enum": [
                        "512x512_diffusion_uncond_finetune_008100",
                        "256x256_diffusion_uncond",
                        "pixel_art_diffusion_hard_256",
                        "pixel_art_diffusion_soft_256",
                        "pixelartdiffusion_expanded",
                        "pixelartdiffusion4k",
                        "PADexpanded",
                        "watercolordiffusion",
                        "watercolordiffusion_2",
                        "PulpSciFiDiffusion",
                        "256x256_openai_comics_faces_by_alex_spirin_084000",
                        "lsun_uncond_100M_1200K_bs128",
                        "ukiyoe_diffusion_256_022000.pt",
                        "liminal_diffusion"
                    ],
                    "title": "diffusion_model",
                    "type": "string"
                },
                "diffusion_sampling_mode": {
                    "description": "An enumeration.",
                    "enum": [
                        "plms",
                        "ddim"
                    ],
                    "title": "diffusion_sampling_mode",
                    "type": "string"
                }
            }
        },
        "info": {
            "title": "Cog",
            "version": "0.1.0"
        },
        "openapi": "3.0.2",
        "paths": {
            "/": {
                "get": {
                    "operationId": "root__get",
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {}
                                }
                            },
                            "description": "Successful Response"
                        }
                    },
                    "summary": "Root"
                }
            },
            "/predictions": {
                "post": {
                    "description": "Run a single prediction on the model",
                    "operationId": "predict_predictions_post",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response"
                                    }
                                }
                            },
                            "description": "Successful Response"
                        },
                        "422": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                }
                            },
                            "description": "Validation Error"
                        }
                    },
                    "summary": "Predict"
                }
            }
        }
    },
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/avatarclip": {
        "components": {
            "schemas": {
                "HTTPValidationError": {
                    "properties": {
                        "detail": {
                            "items": {
                                "$ref": "#/components/schemas/ValidationError"
                            },
                            "title": "Detail",
                            "type": "array"
                        }
                    },
                    "title": "HTTPValidationError",
                    "type": "object"
                },
                "Input": {
                    "properties": {
                        "text": {
                            "default": "overweight sumo wrestler",
                            "description": "Coarse character prompt",
                            "title": "Text",
                            "type": "string",
                            "x-order": 0
                        }
                    },
                    "title": "Input",
                    "type": "object"
                },
                "Output": {
                    "format": "uri",
                    "title": "Output",
                    "type": "string"
                },
                "Request": {
                    "description": "The request body for a prediction",
                    "properties": {
                        "input": {
                            "$ref": "#/components/schemas/Input"
                        },
                        "output_file_prefix": {
                            "title": "Output File Prefix",
                            "type": "string"
                        }
                    },
                    "title": "Request",
                    "type": "object"
                },
                "Response": {
                    "description": "The response body for a prediction",
                    "properties": {
                        "error": {
                            "title": "Error",
                            "type": "string"
                        },
                        "output": {
                            "$ref": "#/components/schemas/Output"
                        },
                        "status": {
                            "$ref": "#/components/schemas/Status"
                        }
                    },
                    "required": [
                        "status"
                    ],
                    "title": "Response",
                    "type": "object"
                },
                "Status": {
                    "description": "An enumeration.",
                    "enum": [
                        "processing",
                        "succeeded",
                        "failed"
                    ],
                    "title": "Status",
                    "type": "string"
                },
                "ValidationError": {
                    "properties": {
                        "loc": {
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "integer"
                                    }
                                ]
                            },
                            "title": "Location",
                            "type": "array"
                        },
                        "msg": {
                            "title": "Message",
                            "type": "string"
                        },
                        "type": {
                            "title": "Error Type",
                            "type": "string"
                        }
                    },
                    "required": [
                        "loc",
                        "msg",
                        "type"
                    ],
                    "title": "ValidationError",
                    "type": "object"
                }
            }
        },
        "info": {
            "title": "Cog",
            "version": "0.1.0"
        },
        "openapi": "3.0.2",
        "paths": {
            "/": {
                "get": {
                    "operationId": "root__get",
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {}
                                }
                            },
                            "description": "Successful Response"
                        }
                    },
                    "summary": "Root"
                }
            },
            "/predictions": {
                "post": {
                    "description": "Run a single prediction on the model",
                    "operationId": "predict_predictions_post",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response"
                                    }
                                }
                            },
                            "description": "Successful Response"
                        },
                        "422": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                }
                            },
                            "description": "Validation Error"
                        }
                    },
                    "summary": "Predict"
                }
            }
        }
    },
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/adampi": {
        "components": {
            "schemas": {
                "HTTPValidationError": {
                    "properties": {
                        "detail": {
                            "items": {
                                "$ref": "#/components/schemas/ValidationError"
                            },
                            "title": "Detail",
                            "type": "array"
                        }
                    },
                    "title": "HTTPValidationError",
                    "type": "object"
                },
                "Input": {
                    "properties": {
                        "image": {
                            "description": "Image to enlarge",
                            "format": "uri",
                            "title": "Image",
                            "type": "string",
                            "x-order": 0
                        }
                    },
                    "required": [
                        "image"
                    ],
                    "title": "Input",
                    "type": "object"
                },
                "Output": {
                    "format": "uri",
                    "title": "Output",
                    "type": "string"
                },
                "Request": {
                    "description": "The request body for a prediction",
                    "properties": {
                        "input": {
                            "$ref": "#/components/schemas/Input"
                        },
                        "output_file_prefix": {
                            "title": "Output File Prefix",
                            "type": "string"
                        }
                    },
                    "title": "Request",
                    "type": "object"
                },
                "Response": {
                    "description": "The response body for a prediction",
                    "properties": {
                        "error": {
                            "title": "Error",
                            "type": "string"
                        },
                        "output": {
                            "$ref": "#/components/schemas/Output"
                        },
                        "status": {
                            "$ref": "#/components/schemas/Status"
                        }
                    },
                    "required": [
                        "status"
                    ],
                    "title": "Response",
                    "type": "object"
                },
                "Status": {
                    "description": "An enumeration.",
                    "enum": [
                        "processing",
                        "succeeded",
                        "failed"
                    ],
                    "title": "Status",
                    "type": "string"
                },
                "ValidationError": {
                    "properties": {
                        "loc": {
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "integer"
                                    }
                                ]
                            },
                            "title": "Location",
                            "type": "array"
                        },
                        "msg": {
                            "title": "Message",
                            "type": "string"
                        },
                        "type": {
                            "title": "Error Type",
                            "type": "string"
                        }
                    },
                    "required": [
                        "loc",
                        "msg",
                        "type"
                    ],
                    "title": "ValidationError",
                    "type": "object"
                }
            }
        },
        "info": {
            "title": "Cog",
            "version": "0.1.0"
        },
        "openapi": "3.0.2",
        "paths": {
            "/": {
                "get": {
                    "operationId": "root__get",
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {}
                                }
                            },
                            "description": "Successful Response"
                        }
                    },
                    "summary": "Root"
                }
            },
            "/predictions": {
                "post": {
                    "description": "Run a single prediction on the model",
                    "operationId": "predict_predictions_post",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response"
                                    }
                                }
                            },
                            "description": "Successful Response"
                        },
                        "422": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                }
                            },
                            "description": "Validation Error"
                        }
                    },
                    "summary": "Predict"
                }
            }
        }
    }
}