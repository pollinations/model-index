{
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/preset-envisioning": {
        "components": {
            "schemas": {
                "HTTPValidationError": {
                    "properties": {
                        "detail": {
                            "items": {
                                "$ref": "#/components/schemas/ValidationError"
                            },
                            "title": "Detail",
                            "type": "array"
                        }
                    },
                    "title": "HTTPValidationError",
                    "type": "object"
                },
                "Input": {
                    "properties": {
                        "Diversity_scale": {
                            "default": 10,
                            "description": "As a rule of thumb, higher values of scale produce better samples at the cost of a reduced output diversity.",
                            "title": "Diversity Scale",
                            "type": "number",
                            "x-order": 4
                        },
                        "ETA": {
                            "default": 1,
                            "description": "Can be 0 or 1",
                            "title": "Eta",
                            "type": "integer",
                            "x-order": 2
                        },
                        "Height": {
                            "default": 256,
                            "description": "Height",
                            "title": "Height",
                            "type": "integer",
                            "x-order": 6
                        },
                        "Prompt": {
                            "default": "",
                            "description": "Your text prompt.",
                            "title": "Prompt",
                            "type": "string",
                            "x-order": 0
                        },
                        "Samples_in_parallel": {
                            "default": 4,
                            "description": "Batch size",
                            "title": "Samples In Parallel",
                            "type": "integer",
                            "x-order": 3
                        },
                        "Steps": {
                            "default": 100,
                            "description": "Number of steps to run the model",
                            "title": "Steps",
                            "type": "integer",
                            "x-order": 1
                        },
                        "Width": {
                            "default": 256,
                            "description": "Width",
                            "title": "Width",
                            "type": "integer",
                            "x-order": 5
                        }
                    },
                    "title": "Input",
                    "type": "object"
                },
                "Output": {
                    "title": "Output",
                    "type": "null"
                },
                "Request": {
                    "description": "The request body for a prediction",
                    "properties": {
                        "input": {
                            "$ref": "#/components/schemas/Input"
                        },
                        "output_file_prefix": {
                            "title": "Output File Prefix",
                            "type": "string"
                        }
                    },
                    "title": "Request",
                    "type": "object"
                },
                "Response": {
                    "description": "The response body for a prediction",
                    "properties": {
                        "error": {
                            "title": "Error",
                            "type": "string"
                        },
                        "output": {
                            "$ref": "#/components/schemas/Output"
                        },
                        "status": {
                            "$ref": "#/components/schemas/Status"
                        }
                    },
                    "required": [
                        "status"
                    ],
                    "title": "Response",
                    "type": "object"
                },
                "Status": {
                    "description": "An enumeration.",
                    "enum": [
                        "processing",
                        "succeeded",
                        "failed"
                    ],
                    "title": "Status",
                    "type": "string"
                },
                "ValidationError": {
                    "properties": {
                        "loc": {
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "integer"
                                    }
                                ]
                            },
                            "title": "Location",
                            "type": "array"
                        },
                        "msg": {
                            "title": "Message",
                            "type": "string"
                        },
                        "type": {
                            "title": "Error Type",
                            "type": "string"
                        }
                    },
                    "required": [
                        "loc",
                        "msg",
                        "type"
                    ],
                    "title": "ValidationError",
                    "type": "object"
                }
            }
        },
        "info": {
            "title": "Cog",
            "version": "0.1.0"
        },
        "openapi": "3.0.2",
        "paths": {
            "/": {
                "get": {
                    "operationId": "root__get",
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {}
                                }
                            },
                            "description": "Successful Response"
                        }
                    },
                    "summary": "Root"
                }
            },
            "/predictions": {
                "post": {
                    "description": "Run a single prediction on the model",
                    "operationId": "predict_predictions_post",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response"
                                    }
                                }
                            },
                            "description": "Successful Response"
                        },
                        "422": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                }
                            },
                            "description": "Validation Error"
                        }
                    },
                    "summary": "Predict"
                }
            }
        }
    },
    "r8.im/bytedance/piano-transcription": {
        "components": {
            "schemas": {
                "Input": {
                    "type": "object",
                    "properties": {
                        "audio_input": {
                            "type": "string",
                            "format": "uri",
                            "description": "Input audio file",
                            "x-order": 0
                        }
                    }
                },
                "Output": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "file": {
                                "type": "string",
                                "format": "uri",
                                "x-order": 0
                            },
                            "text": {
                                "type": "string",
                                "x-order": 1
                            }
                        }
                    }
                }
            }
        }
    },
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/voodoohop/dalle-playground": {
        "components": {
            "schemas": {
                "HTTPValidationError": {
                    "properties": {
                        "detail": {
                            "items": {
                                "$ref": "#/components/schemas/ValidationError"
                            },
                            "title": "Detail",
                            "type": "array"
                        }
                    },
                    "title": "HTTPValidationError",
                    "type": "object"
                },
                "Input": {
                    "properties": {
                        "model_size": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/model_size"
                                }
                            ],
                            "default": "MEGA",
                            "description": "Size of the model",
                            "x-order": 2
                        },
                        "num": {
                            "default": 4,
                            "description": "Number of images to generate",
                            "maximum": 20,
                            "minimum": 1,
                            "title": "Num",
                            "type": "integer",
                            "x-order": 1
                        },
                        "prompt": {
                            "description": "Image prompt",
                            "title": "Prompt",
                            "type": "string",
                            "x-order": 0
                        }
                    },
                    "required": [
                        "prompt"
                    ],
                    "title": "Input",
                    "type": "object"
                },
                "Output": {
                    "items": {
                        "format": "uri",
                        "type": "string"
                    },
                    "title": "Output",
                    "type": "array"
                },
                "Request": {
                    "description": "The request body for a prediction",
                    "properties": {
                        "input": {
                            "$ref": "#/components/schemas/Input"
                        },
                        "output_file_prefix": {
                            "title": "Output File Prefix",
                            "type": "string"
                        }
                    },
                    "title": "Request",
                    "type": "object"
                },
                "Response": {
                    "description": "The response body for a prediction",
                    "properties": {
                        "error": {
                            "title": "Error",
                            "type": "string"
                        },
                        "output": {
                            "$ref": "#/components/schemas/Output"
                        },
                        "status": {
                            "$ref": "#/components/schemas/Status"
                        }
                    },
                    "required": [
                        "status"
                    ],
                    "title": "Response",
                    "type": "object"
                },
                "Status": {
                    "description": "An enumeration.",
                    "enum": [
                        "processing",
                        "succeeded",
                        "failed"
                    ],
                    "title": "Status",
                    "type": "string"
                },
                "ValidationError": {
                    "properties": {
                        "loc": {
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "integer"
                                    }
                                ]
                            },
                            "title": "Location",
                            "type": "array"
                        },
                        "msg": {
                            "title": "Message",
                            "type": "string"
                        },
                        "type": {
                            "title": "Error Type",
                            "type": "string"
                        }
                    },
                    "required": [
                        "loc",
                        "msg",
                        "type"
                    ],
                    "title": "ValidationError",
                    "type": "object"
                },
                "model_size": {
                    "description": "An enumeration.",
                    "enum": [
                        "MEGA"
                    ],
                    "title": "model_size",
                    "type": "string"
                }
            }
        },
        "info": {
            "title": "Cog",
            "version": "0.1.0"
        },
        "openapi": "3.0.2",
        "paths": {
            "/": {
                "get": {
                    "operationId": "root__get",
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {}
                                }
                            },
                            "description": "Successful Response"
                        }
                    },
                    "summary": "Root"
                }
            },
            "/predictions": {
                "post": {
                    "description": "Run a single prediction on the model",
                    "operationId": "predict_predictions_post",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response"
                                    }
                                }
                            },
                            "description": "Successful Response"
                        },
                        "422": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                }
                            },
                            "description": "Validation Error"
                        }
                    },
                    "summary": "Predict"
                }
            }
        }
    },
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/latent-diffusion-400m": {
        "components": {
            "schemas": {
                "HTTPValidationError": {
                    "properties": {
                        "detail": {
                            "items": {
                                "$ref": "#/components/schemas/ValidationError"
                            },
                            "title": "Detail",
                            "type": "array"
                        }
                    },
                    "title": "HTTPValidationError",
                    "type": "object"
                },
                "Input": {
                    "properties": {
                        "Diversity_scale": {
                            "default": 10,
                            "description": "As a rule of thumb, higher values of scale produce better samples at the cost of a reduced output diversity.",
                            "title": "Diversity Scale",
                            "type": "number",
                            "x-order": 4
                        },
                        "ETA": {
                            "default": 1,
                            "description": "Can be 0 or 1",
                            "title": "Eta",
                            "type": "integer",
                            "x-order": 2
                        },
                        "Height": {
                            "default": 256,
                            "description": "Height",
                            "title": "Height",
                            "type": "integer",
                            "x-order": 6
                        },
                        "Prompt": {
                            "default": "",
                            "description": "Your text prompt.",
                            "title": "Prompt",
                            "type": "string",
                            "x-order": 0
                        },
                        "Samples_in_parallel": {
                            "default": 4,
                            "description": "Batch size",
                            "title": "Samples In Parallel",
                            "type": "integer",
                            "x-order": 3
                        },
                        "Steps": {
                            "default": 100,
                            "description": "Number of steps to run the model",
                            "title": "Steps",
                            "type": "integer",
                            "x-order": 1
                        },
                        "Width": {
                            "default": 256,
                            "description": "Width",
                            "title": "Width",
                            "type": "integer",
                            "x-order": 5
                        }
                    },
                    "title": "Input",
                    "type": "object"
                },
                "Output": {
                    "title": "Output",
                    "type": "null"
                },
                "Request": {
                    "description": "The request body for a prediction",
                    "properties": {
                        "input": {
                            "$ref": "#/components/schemas/Input"
                        },
                        "output_file_prefix": {
                            "title": "Output File Prefix",
                            "type": "string"
                        }
                    },
                    "title": "Request",
                    "type": "object"
                },
                "Response": {
                    "description": "The response body for a prediction",
                    "properties": {
                        "error": {
                            "title": "Error",
                            "type": "string"
                        },
                        "output": {
                            "$ref": "#/components/schemas/Output"
                        },
                        "status": {
                            "$ref": "#/components/schemas/Status"
                        }
                    },
                    "required": [
                        "status"
                    ],
                    "title": "Response",
                    "type": "object"
                },
                "Status": {
                    "description": "An enumeration.",
                    "enum": [
                        "processing",
                        "succeeded",
                        "failed"
                    ],
                    "title": "Status",
                    "type": "string"
                },
                "ValidationError": {
                    "properties": {
                        "loc": {
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "integer"
                                    }
                                ]
                            },
                            "title": "Location",
                            "type": "array"
                        },
                        "msg": {
                            "title": "Message",
                            "type": "string"
                        },
                        "type": {
                            "title": "Error Type",
                            "type": "string"
                        }
                    },
                    "required": [
                        "loc",
                        "msg",
                        "type"
                    ],
                    "title": "ValidationError",
                    "type": "object"
                }
            }
        },
        "info": {
            "title": "Cog",
            "version": "0.1.0"
        },
        "openapi": "3.0.2",
        "paths": {
            "/": {
                "get": {
                    "operationId": "root__get",
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {}
                                }
                            },
                            "description": "Successful Response"
                        }
                    },
                    "summary": "Root"
                }
            },
            "/predictions": {
                "post": {
                    "description": "Run a single prediction on the model",
                    "operationId": "predict_predictions_post",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response"
                                    }
                                }
                            },
                            "description": "Successful Response"
                        },
                        "422": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                }
                            },
                            "description": "Validation Error"
                        }
                    },
                    "summary": "Predict"
                }
            }
        }
    },
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/min-dalle": {
        "components": {
            "schemas": {
                "HTTPValidationError": {
                    "properties": {
                        "detail": {
                            "items": {
                                "$ref": "#/components/schemas/ValidationError"
                            },
                            "title": "Detail",
                            "type": "array"
                        }
                    },
                    "title": "HTTPValidationError",
                    "type": "object"
                },
                "Input": {
                    "properties": {
                        "Prompt": {
                            "default": "Dali painting of WALL\u00b7E",
                            "description": "For long prompts, only the first 64 tokens will be used to generate the image.",
                            "title": "Prompt",
                            "type": "string",
                            "x-order": 0
                        },
                        "grid_size": {
                            "default": 1,
                            "description": "Size of the image grid.  4x4 takes about 15 seconds, 8x8 takes about 35 seconds",
                            "maximum": 8,
                            "minimum": 1,
                            "title": "Grid Size",
                            "type": "integer",
                            "x-order": 2
                        },
                        "intermediate_outputs": {
                            "default": true,
                            "description": "Whether to show intermediate outputs while running.  This adds less than a second to the run time.",
                            "title": "Intermediate Outputs",
                            "type": "boolean",
                            "x-order": 1
                        },
                        "log2_supercondition_factor": {
                            "default": 4,
                            "description": "Higher values result in better agreement with the text but a narrower variety of generated images",
                            "maximum": 6,
                            "minimum": 1,
                            "title": "Log2 Supercondition Factor",
                            "type": "integer",
                            "x-order": 3
                        }
                    },
                    "title": "Input",
                    "type": "object"
                },
                "Output": {
                    "items": {
                        "format": "uri",
                        "type": "string"
                    },
                    "title": "Output",
                    "type": "array",
                    "x-cog-array-type": "iterator"
                },
                "Request": {
                    "description": "The request body for a prediction",
                    "properties": {
                        "input": {
                            "$ref": "#/components/schemas/Input"
                        },
                        "output_file_prefix": {
                            "title": "Output File Prefix",
                            "type": "string"
                        }
                    },
                    "title": "Request",
                    "type": "object"
                },
                "Response": {
                    "description": "The response body for a prediction",
                    "properties": {
                        "error": {
                            "title": "Error",
                            "type": "string"
                        },
                        "output": {
                            "$ref": "#/components/schemas/Output"
                        },
                        "status": {
                            "$ref": "#/components/schemas/Status"
                        }
                    },
                    "required": [
                        "status"
                    ],
                    "title": "Response",
                    "type": "object"
                },
                "Status": {
                    "description": "An enumeration.",
                    "enum": [
                        "processing",
                        "succeeded",
                        "failed"
                    ],
                    "title": "Status",
                    "type": "string"
                },
                "ValidationError": {
                    "properties": {
                        "loc": {
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "integer"
                                    }
                                ]
                            },
                            "title": "Location",
                            "type": "array"
                        },
                        "msg": {
                            "title": "Message",
                            "type": "string"
                        },
                        "type": {
                            "title": "Error Type",
                            "type": "string"
                        }
                    },
                    "required": [
                        "loc",
                        "msg",
                        "type"
                    ],
                    "title": "ValidationError",
                    "type": "object"
                }
            }
        },
        "info": {
            "title": "Cog",
            "version": "0.1.0"
        },
        "openapi": "3.0.2",
        "paths": {
            "/": {
                "get": {
                    "operationId": "root__get",
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {}
                                }
                            },
                            "description": "Successful Response"
                        }
                    },
                    "summary": "Root"
                }
            },
            "/predictions": {
                "post": {
                    "description": "Run a single prediction on the model",
                    "operationId": "predict_predictions_post",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response"
                                    }
                                }
                            },
                            "description": "Successful Response"
                        },
                        "422": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                }
                            },
                            "description": "Validation Error"
                        }
                    },
                    "summary": "Predict"
                }
            }
        }
    },
    "r8.im/kuprel/min-dalle": {
        "components": {
            "schemas": {
                "HTTPValidationError": {
                    "properties": {
                        "detail": {
                            "items": {
                                "$ref": "#/components/schemas/ValidationError"
                            },
                            "title": "Detail",
                            "type": "array"
                        }
                    },
                    "title": "HTTPValidationError",
                    "type": "object"
                },
                "Input": {
                    "properties": {
                        "grid_size": {
                            "default": 4,
                            "description": "Size of the image grid.  4x4 takes about 15 seconds, 8x8 takes about 35 seconds",
                            "maximum": 8,
                            "minimum": 1,
                            "title": "Grid Size",
                            "type": "integer",
                            "x-order": 2
                        },
                        "intermediate_outputs": {
                            "default": true,
                            "description": "Whether to show intermediate outputs while running.  This adds less than a second to the run time.",
                            "title": "Intermediate Outputs",
                            "type": "boolean",
                            "x-order": 1
                        },
                        "log2_supercondition_factor": {
                            "default": 4,
                            "description": "Higher values result in better agreement with the text but a narrower variety of generated images",
                            "maximum": 6,
                            "minimum": 1,
                            "title": "Log2 Supercondition Factor",
                            "type": "integer",
                            "x-order": 3
                        },
                        "text": {
                            "default": "Dali painting of WALL\u00b7E",
                            "description": "For long prompts, only the first 64 tokens will be used to generate the image.",
                            "title": "Text",
                            "type": "string",
                            "x-order": 0
                        }
                    },
                    "title": "Input",
                    "type": "object"
                },
                "Output": {
                    "items": {
                        "format": "uri",
                        "type": "string"
                    },
                    "title": "Output",
                    "type": "array",
                    "x-cog-array-type": "iterator"
                },
                "Request": {
                    "description": "The request body for a prediction",
                    "properties": {
                        "input": {
                            "$ref": "#/components/schemas/Input"
                        },
                        "output_file_prefix": {
                            "title": "Output File Prefix",
                            "type": "string"
                        }
                    },
                    "title": "Request",
                    "type": "object"
                },
                "Response": {
                    "description": "The response body for a prediction",
                    "properties": {
                        "error": {
                            "title": "Error",
                            "type": "string"
                        },
                        "output": {
                            "$ref": "#/components/schemas/Output"
                        },
                        "status": {
                            "$ref": "#/components/schemas/Status"
                        }
                    },
                    "required": [
                        "status"
                    ],
                    "title": "Response",
                    "type": "object"
                },
                "Status": {
                    "description": "An enumeration.",
                    "enum": [
                        "processing",
                        "succeeded",
                        "failed"
                    ],
                    "title": "Status",
                    "type": "string"
                },
                "ValidationError": {
                    "properties": {
                        "loc": {
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "integer"
                                    }
                                ]
                            },
                            "title": "Location",
                            "type": "array"
                        },
                        "msg": {
                            "title": "Message",
                            "type": "string"
                        },
                        "type": {
                            "title": "Error Type",
                            "type": "string"
                        }
                    },
                    "required": [
                        "loc",
                        "msg",
                        "type"
                    ],
                    "title": "ValidationError",
                    "type": "object"
                }
            }
        },
        "info": {
            "title": "Cog",
            "version": "0.1.0"
        },
        "openapi": "3.0.2",
        "paths": {
            "/": {
                "get": {
                    "operationId": "root__get",
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {}
                                }
                            },
                            "description": "Successful Response"
                        }
                    },
                    "summary": "Root"
                }
            },
            "/predictions": {
                "post": {
                    "description": "Run a single prediction on the model",
                    "operationId": "predict_predictions_post",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response"
                                    }
                                }
                            },
                            "description": "Successful Response"
                        },
                        "422": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                }
                            },
                            "description": "Validation Error"
                        }
                    },
                    "summary": "Predict"
                }
            }
        }
    },
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/preset-frontpage": {
        "components": {
            "schemas": {
                "HTTPValidationError": {
                    "properties": {
                        "detail": {
                            "items": {
                                "$ref": "#/components/schemas/ValidationError"
                            },
                            "title": "Detail",
                            "type": "array"
                        }
                    },
                    "title": "HTTPValidationError",
                    "type": "object"
                },
                "Input": {
                    "properties": {
                        "Diversity_scale": {
                            "default": 10,
                            "description": "As a rule of thumb, higher values of scale produce better samples at the cost of a reduced output diversity.",
                            "title": "Diversity Scale",
                            "type": "number",
                            "x-order": 4
                        },
                        "ETA": {
                            "default": 1,
                            "description": "Can be 0 or 1",
                            "title": "Eta",
                            "type": "integer",
                            "x-order": 2
                        },
                        "Height": {
                            "default": 256,
                            "description": "Height",
                            "title": "Height",
                            "type": "integer",
                            "x-order": 6
                        },
                        "Prompt": {
                            "default": "",
                            "description": "Your text prompt.",
                            "title": "Prompt",
                            "type": "string",
                            "x-order": 0
                        },
                        "Samples_in_parallel": {
                            "default": 3,
                            "description": "Batch size",
                            "title": "Samples In Parallel",
                            "type": "integer",
                            "x-order": 3
                        },
                        "Steps": {
                            "default": 100,
                            "description": "Number of steps to run the model",
                            "title": "Steps",
                            "type": "integer",
                            "x-order": 1
                        },
                        "Width": {
                            "default": 256,
                            "description": "Width",
                            "title": "Width",
                            "type": "integer",
                            "x-order": 5
                        }
                    },
                    "title": "Input",
                    "type": "object"
                },
                "Output": {
                    "title": "Output",
                    "type": "null"
                },
                "Request": {
                    "description": "The request body for a prediction",
                    "properties": {
                        "input": {
                            "$ref": "#/components/schemas/Input"
                        },
                        "output_file_prefix": {
                            "title": "Output File Prefix",
                            "type": "string"
                        }
                    },
                    "title": "Request",
                    "type": "object"
                },
                "Response": {
                    "description": "The response body for a prediction",
                    "properties": {
                        "error": {
                            "title": "Error",
                            "type": "string"
                        },
                        "output": {
                            "$ref": "#/components/schemas/Output"
                        },
                        "status": {
                            "$ref": "#/components/schemas/Status"
                        }
                    },
                    "required": [
                        "status"
                    ],
                    "title": "Response",
                    "type": "object"
                },
                "Status": {
                    "description": "An enumeration.",
                    "enum": [
                        "processing",
                        "succeeded",
                        "failed"
                    ],
                    "title": "Status",
                    "type": "string"
                },
                "ValidationError": {
                    "properties": {
                        "loc": {
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "integer"
                                    }
                                ]
                            },
                            "title": "Location",
                            "type": "array"
                        },
                        "msg": {
                            "title": "Message",
                            "type": "string"
                        },
                        "type": {
                            "title": "Error Type",
                            "type": "string"
                        }
                    },
                    "required": [
                        "loc",
                        "msg",
                        "type"
                    ],
                    "title": "ValidationError",
                    "type": "object"
                }
            }
        },
        "info": {
            "title": "Cog",
            "version": "0.1.0"
        },
        "openapi": "3.0.2",
        "paths": {
            "/": {
                "get": {
                    "operationId": "root__get",
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {}
                                }
                            },
                            "description": "Successful Response"
                        }
                    },
                    "summary": "Root"
                }
            },
            "/predictions": {
                "post": {
                    "description": "Run a single prediction on the model",
                    "operationId": "predict_predictions_post",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response"
                                    }
                                }
                            },
                            "description": "Successful Response"
                        },
                        "422": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                }
                            },
                            "description": "Validation Error"
                        }
                    },
                    "summary": "Predict"
                }
            }
        }
    },
    "614871946825.dkr.ecr.us-east-1.amazonaws.com/pollinations/majesty-diffusion-cog": {
        "components": {
            "schemas": {
                "HTTPValidationError": {
                    "properties": {
                        "detail": {
                            "items": {
                                "$ref": "#/components/schemas/ValidationError"
                            },
                            "title": "Detail",
                            "type": "array"
                        }
                    },
                    "title": "HTTPValidationError",
                    "type": "object"
                },
                "Input": {
                    "properties": {
                        "latent_diffusion_guidance_scale": {
                            "default": 12,
                            "description": "Balance between creativity and coherent composition. Try values between 0-15. Lower values help with text interpretation and creativity, higher help with composition. ",
                            "title": "Latent Diffusion Guidance Scale",
                            "type": "integer",
                            "x-order": 2
                        },
                        "latent_diffusion_model": {
                            "default": "finetuned",
                            "description": "Original is the previous LAION model. Finetuned should be better but cannot do text. One of:  [\"original\", \"finetuned\", \"ongo (fine tuned in paintings)\", \"erlich (fine tuned in logos)\"]",
                            "title": "Latent Diffusion Model",
                            "type": "string",
                            "x-order": 1
                        },
                        "text_prompt": {
                            "default": "",
                            "description": "Your text prompt.",
                            "title": "Text Prompt",
                            "type": "string",
                            "x-order": 0
                        }
                    },
                    "title": "Input",
                    "type": "object"
                },
                "Output": {
                    "title": "Output",
                    "type": "null"
                },
                "Request": {
                    "description": "The request body for a prediction",
                    "properties": {
                        "input": {
                            "$ref": "#/components/schemas/Input"
                        },
                        "output_file_prefix": {
                            "title": "Output File Prefix",
                            "type": "string"
                        }
                    },
                    "title": "Request",
                    "type": "object"
                },
                "Response": {
                    "description": "The response body for a prediction",
                    "properties": {
                        "error": {
                            "title": "Error",
                            "type": "string"
                        },
                        "output": {
                            "$ref": "#/components/schemas/Output"
                        },
                        "status": {
                            "$ref": "#/components/schemas/Status"
                        }
                    },
                    "required": [
                        "status"
                    ],
                    "title": "Response",
                    "type": "object"
                },
                "Status": {
                    "description": "An enumeration.",
                    "enum": [
                        "processing",
                        "succeeded",
                        "failed"
                    ],
                    "title": "Status",
                    "type": "string"
                },
                "ValidationError": {
                    "properties": {
                        "loc": {
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "integer"
                                    }
                                ]
                            },
                            "title": "Location",
                            "type": "array"
                        },
                        "msg": {
                            "title": "Message",
                            "type": "string"
                        },
                        "type": {
                            "title": "Error Type",
                            "type": "string"
                        }
                    },
                    "required": [
                        "loc",
                        "msg",
                        "type"
                    ],
                    "title": "ValidationError",
                    "type": "object"
                }
            }
        },
        "info": {
            "title": "Cog",
            "version": "0.1.0"
        },
        "openapi": "3.0.2",
        "paths": {
            "/": {
                "get": {
                    "operationId": "root__get",
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {}
                                }
                            },
                            "description": "Successful Response"
                        }
                    },
                    "summary": "Root"
                }
            },
            "/predictions": {
                "post": {
                    "description": "Run a single prediction on the model",
                    "operationId": "predict_predictions_post",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response"
                                    }
                                }
                            },
                            "description": "Successful Response"
                        },
                        "422": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                }
                            },
                            "description": "Validation Error"
                        }
                    },
                    "summary": "Predict"
                }
            }
        }
    }
}